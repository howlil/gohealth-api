2025-06-18 04:35:40:3540 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:35:40:3540 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:35:40:3540 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:35:53:3553 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:35:53:3553 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:35:53:3553 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:36:05:365 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:36:05:365 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:36:05:365 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:36:06:366 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:36:06:366 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:36:06:366 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:36:31:3631 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:36:31:3631 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:36:31:3631 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:37:00:370 [31merror[39m: [31mExpected property name or '}' in JSON at position 1 - /api/auth/register - POST - ::1[39m {
  "stack": "Error: Expected property name or '}' in JSON at position 1\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\error.middleware.js:22:17\n    at Layer.handleError (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:116:17)\n    at trimPrefix (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:340:13)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:291:5)\n    at Layer.handleError (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:111:12)\n    at trimPrefix (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:340:13)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)",
  "params": {},
  "query": {}
}
2025-06-18 04:37:00:370 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:37:00 +0000] "POST /api/auth/register HTTP/1.1" 400 92 "-" "curl/8.13.0"[39m
2025-06-18 04:37:09:379 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/register",
  "body": {
    "password": "Test123!",
    "email": "test@test.com",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:37:09:379 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 8
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[A-Z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[a-z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[0-9]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[^a-zA-Z0-9]/"
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Password must be at least 8 characters",
            "string.pattern.base": "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
            "any.required": "Password is required"
          }
        }
      },
      "name": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "trim",
            "args": {
              "enabled": true
            }
          },
          {
            "name": "min",
            "args": {
              "limit": 2
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Name must be at least 2 characters",
            "string.max": "Name cannot exceed 50 characters",
            "any.required": "Name is required"
          }
        }
      },
      "age": {
        "type": "number",
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 120
            }
          }
        ]
      },
      "gender": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "MALE",
          "FEMALE"
        ]
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:37:09:379 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "password": "Test123!",
    "email": "test@test.com",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:37:09:379 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "password": "Test123!",
    "email": "test@test.com",
    "name": "Test User"
  }
}
2025-06-18 04:37:09:379 [31merror[39m: [31mValidation middleware error: Cannot set property query of #<IncomingMessage> which has only a getter[39m {
  "stack": "TypeError: Cannot set property query of #<IncomingMessage> which has only a getter\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\validation.middleware.js:78:21\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:291:5)\n    at Function.handle (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:186:3)"
}
2025-06-18 04:37:09:379 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:37:09 +0000] "POST /api/auth/register HTTP/1.1" 422 58 "-" "Mozilla/5.0 (Windows NT 10.0; Microsoft Windows 10.0.26100; en-US) PowerShell/7.2.24"[39m
2025-06-18 04:37:26:3726 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:37:26:3726 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:37:26:3726 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:37:29:3729 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:37:29:3729 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:37:29:3729 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:37:30:3730 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:37:30:3730 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:37:30:3730 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:37:42:3742 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/register",
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:37:42:3742 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 8
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[A-Z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[a-z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[0-9]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[^a-zA-Z0-9]/"
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Password must be at least 8 characters",
            "string.pattern.base": "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
            "any.required": "Password is required"
          }
        }
      },
      "name": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "trim",
            "args": {
              "enabled": true
            }
          },
          {
            "name": "min",
            "args": {
              "limit": 2
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Name must be at least 2 characters",
            "string.max": "Name cannot exceed 50 characters",
            "any.required": "Name is required"
          }
        }
      },
      "age": {
        "type": "number",
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 120
            }
          }
        ]
      },
      "gender": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "MALE",
          "FEMALE"
        ]
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:37:42:3742 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:37:42:3742 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  }
}
2025-06-18 04:37:42:3742 [31merror[39m: [31mValidation middleware error: Cannot set property query of #<IncomingMessage> which has only a getter[39m {
  "stack": "TypeError: Cannot set property query of #<IncomingMessage> which has only a getter\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\validation.middleware.js:78:21\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:291:5)\n    at Function.handle (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:186:3)"
}
2025-06-18 04:37:42:3742 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:37:42 +0000] "POST /api/auth/register HTTP/1.1" 422 58 "-" "axios/1.9.0"[39m
2025-06-18 04:37:57:3757 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:37:57:3757 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:37:57:3757 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:38:05:385 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/register",
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:38:05:385 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 8
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[A-Z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[a-z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[0-9]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[^a-zA-Z0-9]/"
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Password must be at least 8 characters",
            "string.pattern.base": "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
            "any.required": "Password is required"
          }
        }
      },
      "name": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "trim",
            "args": {
              "enabled": true
            }
          },
          {
            "name": "min",
            "args": {
              "limit": 2
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Name must be at least 2 characters",
            "string.max": "Name cannot exceed 50 characters",
            "any.required": "Name is required"
          }
        }
      },
      "age": {
        "type": "number",
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 120
            }
          }
        ]
      },
      "gender": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "MALE",
          "FEMALE"
        ]
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:38:05:385 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:38:05:385 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  }
}
2025-06-18 04:38:05:385 [31merror[39m: [31mValidation middleware error: Cannot set property query of #<IncomingMessage> which has only a getter[39m {
  "stack": "TypeError: Cannot set property query of #<IncomingMessage> which has only a getter\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\validation.middleware.js:78:21\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:291:5)\n    at Function.handle (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:186:3)"
}
2025-06-18 04:38:05:385 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:38:05 +0000] "POST /api/auth/register HTTP/1.1" 422 58 "-" "axios/1.9.0"[39m
2025-06-18 04:38:33:3833 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:38:33:3833 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:38:33:3833 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:38:44:3844 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/register",
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:38:44:3844 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 8
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[A-Z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[a-z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[0-9]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[^a-zA-Z0-9]/"
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Password must be at least 8 characters",
            "string.pattern.base": "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
            "any.required": "Password is required"
          }
        }
      },
      "name": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "trim",
            "args": {
              "enabled": true
            }
          },
          {
            "name": "min",
            "args": {
              "limit": 2
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Name must be at least 2 characters",
            "string.max": "Name cannot exceed 50 characters",
            "any.required": "Name is required"
          }
        }
      },
      "age": {
        "type": "number",
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 120
            }
          }
        ]
      },
      "gender": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "MALE",
          "FEMALE"
        ]
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:38:44:3844 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:38:44:3844 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  }
}
2025-06-18 04:38:44:3844 [31merror[39m: [31mValidation middleware error: Cannot set property query of #<IncomingMessage> which has only a getter[39m {
  "stack": "TypeError: Cannot set property query of #<IncomingMessage> which has only a getter\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\validation.middleware.js:78:21\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:291:5)\n    at Function.handle (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:186:3)"
}
2025-06-18 04:38:44:3844 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:38:44 +0000] "POST /api/auth/register HTTP/1.1" 422 153 "-" "axios/1.9.0"[39m
2025-06-18 04:39:15:3915 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:39:15:3915 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:39:15:3915 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/register",
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 8
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[A-Z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[a-z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[0-9]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[^a-zA-Z0-9]/"
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Password must be at least 8 characters",
            "string.pattern.base": "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
            "any.required": "Password is required"
          }
        }
      },
      "name": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "trim",
            "args": {
              "enabled": true
            }
          },
          {
            "name": "min",
            "args": {
              "limit": 2
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Name must be at least 2 characters",
            "string.max": "Name cannot exceed 50 characters",
            "any.required": "Name is required"
          }
        }
      },
      "age": {
        "type": "number",
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 120
            }
          }
        ]
      },
      "gender": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "MALE",
          "FEMALE"
        ]
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!",
    "name": "Test User"
  }
}
2025-06-18 04:39:46:3946 [32minfo[39m: [32mAttempting to register user with email: test@test.com[39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["test@test.com",1,0][39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mHashing password...[39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mCreating new user record...[39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`User` (`id`,`email`,`password`,`name`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?) - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392","test@test.com","$2b$10$xDay1VovxMDw3YFlM.vJv.zWiIlyJ.gAgYSex.m5pVXBVFwhnd3sa","Test User","2025-06-17 21:39:46.814 UTC","2025-06-17 21:39:46.814 UTC"][39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE `db_gohealth`.`User`.`id` = ? LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392",1,0][39m
2025-06-18 04:39:46:3946 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 04:39:46:3946 [32minfo[39m: [32mUser registered successfully with ID: eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 04:39:46:3946 [32minfo[39m: [32mUser registered with email: test@test.com[39m
2025-06-18 04:39:46:3946 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:39:46 +0000] "POST /api/auth/register HTTP/1.1" 201 178 "-" "axios/1.9.0"[39m
2025-06-18 04:40:01:401 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:40:01:401 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:40:01:401 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:40:15:4015 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/register",
  "body": {
    "email": "user@example.com",
    "password": "password123",
    "name": "John Doe"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:40:15:4015 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 8
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[A-Z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[a-z]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[0-9]/"
            }
          },
          {
            "name": "pattern",
            "args": {
              "regex": "/[^a-zA-Z0-9]/"
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Password must be at least 8 characters",
            "string.pattern.base": "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
            "any.required": "Password is required"
          }
        }
      },
      "name": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "trim",
            "args": {
              "enabled": true
            }
          },
          {
            "name": "min",
            "args": {
              "limit": 2
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ],
        "preferences": {
          "messages": {
            "string.min": "Name must be at least 2 characters",
            "string.max": "Name cannot exceed 50 characters",
            "any.required": "Name is required"
          }
        }
      },
      "age": {
        "type": "number",
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 120
            }
          }
        ]
      },
      "gender": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "MALE",
          "FEMALE"
        ]
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:40:15:4015 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "user@example.com",
    "password": "password123",
    "name": "John Doe"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:40:15:4015 [31merror[39m: [31mValidation failed:[39m {
  "path": "/register",
  "method": "POST",
  "errors": {
    "body.password": [
      "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
      "Password must contain at least one uppercase letter, lowercase letter, number, and special character"
    ]
  },
  "details": [
    {
      "message": "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
      "path": [
        "body",
        "password"
      ],
      "type": "string.pattern.base",
      "context": {
        "regex": {},
        "value": "password123",
        "label": "body.password",
        "key": "password"
      }
    },
    {
      "message": "Password must contain at least one uppercase letter, lowercase letter, number, and special character",
      "path": [
        "body",
        "password"
      ],
      "type": "string.pattern.base",
      "context": {
        "regex": {},
        "value": "password123",
        "label": "body.password",
        "key": "password"
      }
    }
  ]
}
2025-06-18 04:40:15:4015 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:40:15 +0000] "POST /api/auth/register HTTP/1.1" 422 291 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/login",
  "body": {
    "email": "user@example.com",
    "password": "password123"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Password is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "user@example.com",
    "password": "password123"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "user@example.com",
    "password": "password123"
  }
}
2025-06-18 04:40:28:4028 [32minfo[39m: [32mLogin attempt for email: user@example.com[39m
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mFinding user by email...[39m
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["user@example.com",1,0][39m
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mVerifying password...[39m
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mGenerating authentication tokens...[39m
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mGenerating tokens for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:40:28:4028 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 04:40:28:4028 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 logged in successfully[39m
2025-06-18 04:40:28:4028 [32minfo[39m: [32mUser logged in with email: user@example.com[39m
2025-06-18 04:40:28:4028 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:40:28 +0000] "POST /api/auth/login HTTP/1.1" 200 670 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/login",
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Password is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  }
}
2025-06-18 04:40:34:4034 [32minfo[39m: [32mLogin attempt for email: test@test.com[39m
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mFinding user by email...[39m
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["test@test.com",1,0][39m
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mVerifying password...[39m
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mGenerating authentication tokens...[39m
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mGenerating tokens for user eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 04:40:34:4034 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 04:40:34:4034 [32minfo[39m: [32mUser eec63bcf-2dc2-44fd-8259-7d28f0217392 logged in successfully[39m
2025-06-18 04:40:34:4034 [32minfo[39m: [32mUser logged in with email: test@test.com[39m
2025-06-18 04:40:34:4034 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:40:34 +0000] "POST /api/auth/login HTTP/1.1" 200 660 "-" "axios/1.9.0"[39m
2025-06-18 04:40:45:4045 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:40:45:4045 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:40:45:4045 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:41:07:417 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/login",
  "body": {
    "email": "user@example.com",
    "password": "password123"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:41:07:417 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Password is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:41:07:417 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "user@example.com",
    "password": "password123"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:41:07:417 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "user@example.com",
    "password": "password123"
  }
}
2025-06-18 04:41:07:417 [32minfo[39m: [32mLogin attempt for email: user@example.com[39m
2025-06-18 04:41:07:417 [34mdebug[39m: [34mFinding user by email...[39m
2025-06-18 04:41:07:417 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:41:07:417 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["user@example.com",1,0][39m
2025-06-18 04:41:07:417 [34mdebug[39m: [34mVerifying password...[39m
2025-06-18 04:41:07:417 [34mdebug[39m: [34mGenerating authentication tokens...[39m
2025-06-18 04:41:07:417 [34mdebug[39m: [34mGenerating tokens for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:07:417 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 04:41:07:417 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 logged in successfully[39m
2025-06-18 04:41:07:417 [32minfo[39m: [32mUser logged in with email: user@example.com[39m
2025-06-18 04:41:07:417 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:07 +0000] "POST /api/auth/login HTTP/1.1" 200 670 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:13:4113 [33mwarn[39m: [33mAuthentication failed: No auth token[39m
2025-06-18 04:41:13:4113 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:13 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 401 85 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:13:4113 [33mwarn[39m: [33mAuthentication failed: No auth token[39m
2025-06-18 04:41:13:4113 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:13 +0000] "GET /api/users/profile HTTP/1.1" 401 85 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/refresh",
  "body": {
    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA1MTEwZDg5LTAwY2EtNGQ2Ni04NjMwLTA2MzI0NjNlMmM2NSIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsImlhdCI6MTc1MDE5NjQ2NywiZXhwIjoxNzUyNzg4NDY3fQ.KPvy4UcBP1Es1e_6B4raqoYepEo4VgR-G8akNlh-Svo"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "refreshToken": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Refresh token is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA1MTEwZDg5LTAwY2EtNGQ2Ni04NjMwLTA2MzI0NjNlMmM2NSIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsImlhdCI6MTc1MDE5NjQ2NywiZXhwIjoxNzUyNzg4NDY3fQ.KPvy4UcBP1Es1e_6B4raqoYepEo4VgR-G8akNlh-Svo"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA1MTEwZDg5LTAwY2EtNGQ2Ni04NjMwLTA2MzI0NjNlMmM2NSIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsImlhdCI6MTc1MDE5NjQ2NywiZXhwIjoxNzUyNzg4NDY3fQ.KPvy4UcBP1Es1e_6B4raqoYepEo4VgR-G8akNlh-Svo"
  }
}
2025-06-18 04:41:14:4114 [32minfo[39m: [32mAttempting to refresh token[39m
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mVerifying refresh token...[39m
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mFinding user with ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mGenerating new tokens...[39m
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mGenerating tokens for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:14:4114 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 04:41:14:4114 [32minfo[39m: [32mToken refreshed successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:14:4114 [32minfo[39m: [32mToken refreshed successfully[39m
2025-06-18 04:41:14:4114 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:14 +0000] "POST /api/auth/refresh HTTP/1.1" 200 585 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:15:4115 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 04:41:15:4115 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 04:41:15:4115 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 04:41:15:4115 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:15:4115 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:15:4115 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 04:41:15:4115 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:15 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1389 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:32:4132 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:41:32:4132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:32:4132 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:32:4132 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 04:41:32:4132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:32:4132 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 04:41:32:4132 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 04:41:32:4132 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:32:4132 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 retrieved profile[39m
2025-06-18 04:41:32:4132 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:32 +0000] "GET /api/users/profile HTTP/1.1" 200 330 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:36:4136 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 04:41:36:4136 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 04:41:36:4136 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 04:41:36:4136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:36:4136 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:41:36:4136 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 04:41:36:4136 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:36 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1389 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:41:38:4138 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:38 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 04:41:38:4138 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:41:38:4138 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:38 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:48:4148 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:41:48:4148 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:48:4148 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["dummy2","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:48:4148 [31merror[39m: [31mError deleting meal: Meal not found[39m {
  "statusCode": 404,
  "errors": null,
  "isOperational": true,
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:165:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)"
}
2025-06-18 04:41:48:4148 [31merror[39m: [31mMeal not found - /api/meals/dummy2 - DELETE - ::1[39m {
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:165:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)",
  "params": {},
  "query": {}
}
2025-06-18 04:41:48:4148 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:48 +0000] "DELETE /api/meals/dummy2 HTTP/1.1" 404 56 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:41:57:4157 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:57:4157 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["dummy2","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:41:57:4157 [31merror[39m: [31mError deleting meal: Meal not found[39m {
  "statusCode": 404,
  "errors": null,
  "isOperational": true,
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:165:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)"
}
2025-06-18 04:41:57:4157 [31merror[39m: [31mMeal not found - /api/meals/dummy2 - DELETE - ::1[39m {
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:165:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)",
  "params": {},
  "query": {}
}
2025-06-18 04:41:57:4157 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:41:57 +0000] "DELETE /api/meals/dummy2 HTTP/1.1" 404 56 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:42:02:422 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:02:422 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["dummy2","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:02:422 [31merror[39m: [31mError deleting meal: Meal not found[39m {
  "statusCode": 404,
  "errors": null,
  "isOperational": true,
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:165:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)"
}
2025-06-18 04:42:02:422 [31merror[39m: [31mMeal not found - /api/meals/dummy2 - DELETE - ::1[39m {
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:165:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)",
  "params": {},
  "query": {}
}
2025-06-18 04:42:02:422 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:42:02 +0000] "DELETE /api/meals/dummy2 HTTP/1.1" 404 56 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:42:04:424 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:42:04:424 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:04:424 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["dummy1","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:04:424 [31merror[39m: [31mError deleting meal: Meal not found[39m {
  "statusCode": 404,
  "errors": null,
  "isOperational": true,
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:165:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)"
}
2025-06-18 04:42:04:424 [31merror[39m: [31mMeal not found - /api/meals/dummy1 - DELETE - ::1[39m {
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:165:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)",
  "params": {},
  "query": {}
}
2025-06-18 04:42:04:424 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:42:04 +0000] "DELETE /api/meals/dummy1 HTTP/1.1" 404 56 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:26:4226 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 04:42:26:4226 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 04:42:26:4226 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 04:42:26:4226 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:26:4226 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:26:4226 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 04:42:26:4226 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:42:26 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1389 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:29:4229 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range month and month null[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 04:42:29:4229 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 04:42:29:4229 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-01 00:00:00 UTC","2025-06-07 00:00:00 UTC"][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-08 00:00:00 UTC","2025-06-14 00:00:00 UTC"][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC","2025-06-21 00:00:00 UTC"][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-22 00:00:00 UTC","2025-06-28 00:00:00 UTC"][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-29 00:00:00 UTC","2025-06-29 00:00:00 UTC"][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 04:42:29:4229 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:29:4229 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:29:4229 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: month, month: null[39m
2025-06-18 04:42:29:4229 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:42:29 +0000] "GET /api/users/dashboard?range=month HTTP/1.1" 200 1406 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:33:4233 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 04:42:33:4233 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 04:42:33:4233 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 04:42:33:4233 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:42:33:4233 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:42:33:4233 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 04:42:33:4233 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:42:33 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1389 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:43:00:430 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:43:00:430 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:43:00:430 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "PUT",
  "path": "/profile",
  "body": {
    "name": "howlil",
    "age": 25,
    "gender": "MALE",
    "height": 170,
    "weight": 55,
    "activityLevel": "VERY_ACTIVE"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:43:00:430 [31merror[39m: [31mValidation middleware error: Cannot read properties of undefined (reading 'describe')[39m {
  "stack": "TypeError: Cannot read properties of undefined (reading 'describe')\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\validation.middleware.js:19:37\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at middleware (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\express-validator\\lib\\middlewares\\check.js:16:13)"
}
2025-06-18 04:43:00:430 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:43:00 +0000] "PUT /api/users/profile HTTP/1.1" 422 138 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:43:42:4342 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:43:42:4342 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:43:42:4342 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:43:42:4342 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:43:42:4342 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:43:42:4342 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:43:42:4342 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 04:43:42:4342 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:43:42:4342 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:43:42 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:43:43:4343 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:43:43:4343 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:43:43:4343 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:43:43:4343 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:43:43:4343 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:43:43:4343 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:43:43:4343 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:43:43 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:43:49:4349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:43:49:4349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%ay%",10,0][39m
2025-06-18 04:43:49:4349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b","964331b7-5586-4e83-be77-d5b0722f6d9e","209a9945-5e76-4c04-bf68-baa0162c331a"][39m
2025-06-18 04:43:49:4349 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:43:49 +0000] "GET /api/meals/foods/autocomplete?query=ay&limit=10 HTTP/1.1" 200 943 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:44:00:440 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:44:00:440 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:44:00:440 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 107,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:44:00:440 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:44:00:440 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 107,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:44:00:440 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 107,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:44:00:440 [31merror[39m: [31mError creating meal: dateStr.split is not a function[39m {
  "stack": "TypeError: dateStr.split is not a function\n    at parseDate (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\libs\\utils\\date.js:17:27)\n    at MealService.createMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:18:26)\n    at MealController.createMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:14:43)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\error.middleware.js:46:23\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\validation.middleware.js:92:9\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:117:3)"
}
2025-06-18 04:44:00:440 [31merror[39m: [31mdateStr.split is not a function - /api/meals - POST - ::1[39m {
  "stack": "Error: dateStr.split is not a function\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\error.middleware.js:22:17\n    at Layer.handleError (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:116:17)\n    at trimPrefix (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:340:13)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:291:5)\n    at Layer.handleError (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:111:12)\n    at trimPrefix (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:340:13)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)",
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 107,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  },
  "params": {},
  "query": {}
}
2025-06-18 04:44:00:440 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:44:00 +0000] "POST /api/meals HTTP/1.1" 500 73 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:44:06:446 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:44:06:446 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%Ayam Panggang%",10,0][39m
2025-06-18 04:44:06:446 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 04:44:06:446 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:44:06 +0000] "GET /api/meals/foods/autocomplete?query=Ayam%20Panggang&limit=10 HTTP/1.1" 200 178 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:44:14:4414 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:44:14:4414 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:44:14:4414 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:44:16:4416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:44:16:4416 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:44:16:4416 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:44:16:4416 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:44:16:4416 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:44:16:4416 [31merror[39m: [31mError creating meal: dateStr.split is not a function[39m {
  "stack": "TypeError: dateStr.split is not a function\n    at parseDate (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\libs\\utils\\date.js:17:27)\n    at MealService.createMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:18:26)\n    at MealController.createMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:14:43)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\error.middleware.js:46:23\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\validation.middleware.js:92:9\n    at Layer.handleRequest (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\route.js:117:3)"
}
2025-06-18 04:44:16:4416 [31merror[39m: [31mdateStr.split is not a function - /api/meals - POST - ::1[39m {
  "stack": "Error: dateStr.split is not a function\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\middleware\\error.middleware.js:22:17\n    at Layer.handleError (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:116:17)\n    at trimPrefix (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:340:13)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:291:5)\n    at Layer.handleError (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\lib\\layer.js:111:12)\n    at trimPrefix (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:340:13)\n    at C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\node_modules\\router\\index.js:582:12)",
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  },
  "params": {},
  "query": {}
}
2025-06-18 04:44:16:4416 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:44:16 +0000] "POST /api/meals HTTP/1.1" 500 73 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:44:55:4455 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:44:55:4455 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:44:55:4455 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:44:58:4458 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:44:58:4458 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:44:58:4458 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:44:59:4459 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:44:59:4459 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:44:59:4459 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/login",
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Password is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  }
}
2025-06-18 04:45:18:4518 [32minfo[39m: [32mLogin attempt for email: test@test.com[39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mFinding user by email...[39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["test@test.com",1,0][39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mVerifying password...[39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mGenerating authentication tokens...[39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mGenerating tokens for user eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 04:45:18:4518 [32minfo[39m: [32mUser eec63bcf-2dc2-44fd-8259-7d28f0217392 logged in successfully[39m
2025-06-18 04:45:18:4518 [32minfo[39m: [32mUser logged in with email: test@test.com[39m
2025-06-18 04:45:18:4518 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:45:18 +0000] "POST /api/auth/login HTTP/1.1" 200 660 "-" "axios/1.9.0"[39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392",1,0][39m
2025-06-18 04:45:18:4518 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "PUT",
  "path": "/profile",
  "body": {
    "name": "howlil",
    "age": 25,
    "gender": "MALE",
    "height": 170,
    "weight": 55,
    "activityLevel": "VERY_ACTIVE"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "name": {
        "type": "string",
        "rules": [
          {
            "name": "trim",
            "args": {
              "enabled": true
            }
          },
          {
            "name": "min",
            "args": {
              "limit": 2
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "age": {
        "type": "number",
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 120
            }
          }
        ]
      },
      "gender": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "MALE",
          "FEMALE"
        ]
      },
      "height": {
        "type": "number",
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 50
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 300
            }
          }
        ]
      },
      "weight": {
        "type": "number",
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 20
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 500
            }
          }
        ]
      },
      "activityLevel": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "SEDENTARY",
          "LIGHTLY",
          "ACTIVE",
          "MODERATELY_ACTIVE",
          "VERY_ACTIVE",
          "EXTRA_ACTIVE"
        ]
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "name": "howlil",
    "age": 25,
    "gender": "MALE",
    "height": 170,
    "weight": 55,
    "activityLevel": "VERY_ACTIVE"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "name": "howlil",
    "age": 25,
    "gender": "MALE",
    "height": 170,
    "weight": 55,
    "activityLevel": "VERY_ACTIVE"
  }
}
2025-06-18 04:45:19:4519 [32minfo[39m: [32mUpdating profile for user ID: eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mUpdating user record with data:[39m {
  "name": "howlil",
  "age": 25,
  "gender": "MALE",
  "height": 170,
  "weight": 55,
  "activityLevel": "VERY_ACTIVE"
}
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392"][39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mQuery: UPDATE `db_gohealth`.`User` SET `name` = ?, `age` = ?, `gender` = ?, `height` = ?, `weight` = ?, `activityLevel` = ?, `updatedAt` = ? WHERE (`db_gohealth`.`User`.`id` IN (?) AND (`db_gohealth`.`User`.`id` = ? AND 1=1)) - Params: ["howlil",25,"MALE",170,55,"VERY_ACTIVE","2025-06-17 21:45:19.033 UTC","eec63bcf-2dc2-44fd-8259-7d28f0217392","eec63bcf-2dc2-44fd-8259-7d28f0217392"][39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE `db_gohealth`.`User`.`id` = ? LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392",1,0][39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 04:45:19:4519 [32minfo[39m: [32mProfile updated successfully for user eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 04:45:19:4519 [32minfo[39m: [32mFetching profile for user ID: eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392",1,0][39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 04:45:19:4519 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 04:45:19:4519 [32minfo[39m: [32mProfile retrieved successfully for user eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 04:45:19:4519 [32minfo[39m: [32mUser eec63bcf-2dc2-44fd-8259-7d28f0217392 updated profile[39m
2025-06-18 04:45:19:4519 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:45:19 +0000] "PUT /api/users/profile HTTP/1.1" 200 323 "-" "axios/1.9.0"[39m
2025-06-18 04:45:29:4529 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:45:29:4529 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:45:29:4529 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:46:19:4619 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:46:19:4619 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:46:19:4619 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:46:34:4634 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:46:34:4634 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:46:34:4634 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:46:36:4636 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:46:36:4636 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:46:36:4636 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:47:05:475 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:47:05:475 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:47:05:475 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:47:20:4720 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:47:20:4720 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:47:20:4720 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:47:23:4723 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:47:23:4723 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:47:23:4723 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/login",
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Password is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  }
}
2025-06-18 04:49:45:4945 [32minfo[39m: [32mLogin attempt for email: test@test.com[39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mFinding user by email...[39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["test@test.com",1,0][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mVerifying password...[39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mGenerating authentication tokens...[39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mGenerating tokens for user eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 04:49:45:4945 [32minfo[39m: [32mUser eec63bcf-2dc2-44fd-8259-7d28f0217392 logged in successfully[39m
2025-06-18 04:49:45:4945 [32minfo[39m: [32mUser logged in with email: test@test.com[39m
2025-06-18 04:49:45:4945 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:49:45 +0000] "POST /api/auth/login HTTP/1.1" 200 657 "-" "axios/1.9.0"[39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392",1,0][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["DAGING-003",true,1,0][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["db26733b-8624-4fd3-b9c8-7e54fbbfdbe3","eec63bcf-2dc2-44fd-8259-7d28f0217392","DAGING-003","BREAKFAST","2025-06-17 17:00:00 UTC",100,"gram",18000,2500,800,0,"2025-06-17 21:49:45.321 UTC","2025-06-17 21:49:45.321 UTC"][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["db26733b-8624-4fd3-b9c8-7e54fbbfdbe3",1,0][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["DAGING-003"][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 04:49:45:4945 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 04:49:45:4945 [32minfo[39m: [32mUser eec63bcf-2dc2-44fd-8259-7d28f0217392 created a meal[39m
2025-06-18 04:49:45:4945 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:49:45 +0000] "POST /api/meals HTTP/1.1" 201 769 "-" "axios/1.9.0"[39m
2025-06-18 04:49:58:4958 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 04:49:58:4958 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 04:49:58:4958 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 04:50:06:506 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:06:506 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%Ayam Panggang%",10,0][39m
2025-06-18 04:50:06:506 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 04:50:06:506 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:06 +0000] "GET /api/meals/foods/autocomplete?query=Ayam%20Panggang&limit=10 HTTP/1.1" 200 178 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:12:5012 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:12:5012 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%Ayam Panggang%",10,0][39m
2025-06-18 04:50:12:5012 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 04:50:12:5012 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:12 +0000] "GET /api/meals/foods/autocomplete?query=Ayam%20Panggang&limit=10 HTTP/1.1" 200 178 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "DAGING-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["DAGING-003",true,1,0][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["2757778f-d948-4227-8951-b41b197a601f","05110d89-00ca-4d66-8630-0632463e2c65","DAGING-003","BREAKFAST","2025-06-17 17:00:00 UTC",100,"gram",18000,2500,800,0,"2025-06-17 21:50:16.498 UTC","2025-06-17 21:50:16.498 UTC"][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["2757778f-d948-4227-8951-b41b197a601f",1,0][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["DAGING-003"][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 04:50:16:5016 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 04:50:16:5016 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 04:50:16:5016 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:16 +0000] "POST /api/meals HTTP/1.1" 201 769 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:50:17:5017 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:17 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 04:50:17:5017 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:50:17:5017 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:17 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:30:5030 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 04:50:30:5030 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 04:50:30:5030 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 04:50:30:5030 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:30:5030 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:50:30:5030 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 04:50:30:5030 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:30 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1389 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/favorites",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 20
  }
}
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id`, `db_gohealth`.`FavoriteFood`.`userId`, `db_gohealth`.`FavoriteFood`.`foodId`, `db_gohealth`.`FavoriteFood`.`createdAt`, `db_gohealth`.`FavoriteFood`.`updatedAt` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`userId` = ? ORDER BY `db_gohealth`.`FavoriteFood`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",20,0][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["BUAH-001","SAYUR-001"][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["209a9945-5e76-4c04-bf68-baa0162c331a","964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`FavoriteFood`.`id` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`userId` = ?) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65"][39m
2025-06-18 04:50:34:5034 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:34 +0000] "GET /api/meals/favorites?page=0&limit=20 HTTP/1.1" 200 1258 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 20
  }
}
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,20,0][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","209a9945-5e76-4c04-bf68-baa0162c331a","fead93d8-15fd-45df-bbef-50e7113ed91b","74586580-b2d6-4043-a1f5-4184150061a4"][39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`Food`.`id` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ?) AS `sub` - Params: [true][39m
2025-06-18 04:50:34:5034 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:34 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 200 8051 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:34:5034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt`, COALESCE(`aggr_selection_0_Food`.`_aggr_count_foods`, 0) AS `_aggr_count_foods` FROM `db_gohealth`.`FoodCategory` LEFT JOIN (SELECT `db_gohealth`.`Food`.`categoryId`, COUNT(*) AS `_aggr_count_foods` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? GROUP BY `db_gohealth`.`Food`.`categoryId`) AS `aggr_selection_0_Food` ON (`db_gohealth`.`FoodCategory`.`id` = `aggr_selection_0_Food`.`categoryId`) WHERE 1=1 ORDER BY `db_gohealth`.`FoodCategory`.`name` ASC - Params: [true][39m
2025-06-18 04:50:34:5034 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:34 +0000] "GET /api/meals/foods/categories HTTP/1.1" 200 1453 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:50:39:5039 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:39 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 04:50:39:5039 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 04:50:39:5039 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:39 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:50:48:5048 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:48:5048 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["dummy1","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:50:48:5048 [31merror[39m: [31mError deleting meal: Meal not found[39m {
  "statusCode": 404,
  "errors": null,
  "isOperational": true,
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:177:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)"
}
2025-06-18 04:50:48:5048 [31merror[39m: [31mMeal not found - /api/meals/dummy1 - DELETE - ::1[39m {
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:177:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)",
  "params": {},
  "query": {}
}
2025-06-18 04:50:48:5048 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:50:48 +0000] "DELETE /api/meals/dummy1 HTTP/1.1" 404 56 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 04:52:14:5214 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:52:14:5214 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:14:5214 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "01-01-2023",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:14:5214 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:14:5214 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "01-01-2023",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:14:5214 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2022-12-31T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:52:14:5214 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2022-12-31 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:52:14:5214 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2022-12-31 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:52:14:5214 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:14 +0000] "GET /api/meals?page=0&limit=10&date=01-01-2023&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:30:5230 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:52:30:5230 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:30:5230 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:30:5230 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:30:5230 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:30:5230 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:52:30:5230 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:52:30:5230 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:52:30:5230 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:30 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 200 141 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:37:5237 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:37:5237 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:37:5237 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:37:5237 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:37:5237 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:52:37:5237 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:52:37:5237 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:52:37:5237 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:37 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:52:38:5238 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:38 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:52:38:5238 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:38 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:52:38:5238 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:38 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:52:38:5238 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:52:38:5238 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:38 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:39:5239 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:39:5239 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:39:5239 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:39:5239 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:52:39:5239 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:52:39:5239 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:52:39:5239 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:52:39:5239 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:39 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST",10,0][39m
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 04:52:43:5243 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:43 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 200 141 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST",10,0][39m
2025-06-18 04:52:43:5243 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 04:52:43:5243 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:43 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:52:51:5251 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:52:51:5251 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:52:51:5251 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "06-18-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 04:52:51:5251 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:52:51:5251 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "06-18-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 04:52:51:5251 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 04:52:51:5251 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","BREAKFAST",10,0][39m
2025-06-18 04:52:51:5251 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 04:52:51:5251 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:52:51 +0000] "GET /api/meals?page=0&limit=10&date=06-18-2025&mealType=BREAKFAST HTTP/1.1" 200 141 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:53:02:532 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/login",
  "body": {
    "email": "user@example.com",
    "password": "password123"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:53:02:532 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Password is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:53:02:532 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "user@example.com",
    "password": "password123"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:53:02:532 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "user@example.com",
    "password": "password123"
  }
}
2025-06-18 04:53:02:532 [32minfo[39m: [32mLogin attempt for email: user@example.com[39m
2025-06-18 04:53:02:532 [34mdebug[39m: [34mFinding user by email...[39m
2025-06-18 04:53:02:532 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["user@example.com",1,0][39m
2025-06-18 04:53:02:532 [34mdebug[39m: [34mVerifying password...[39m
2025-06-18 04:53:02:532 [34mdebug[39m: [34mGenerating authentication tokens...[39m
2025-06-18 04:53:02:532 [34mdebug[39m: [34mGenerating tokens for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 04:53:02:532 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 04:53:02:532 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 logged in successfully[39m
2025-06-18 04:53:02:532 [32minfo[39m: [32mUser logged in with email: user@example.com[39m
2025-06-18 04:53:02:532 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:53:02 +0000] "POST /api/auth/login HTTP/1.1" 200 670 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:53:25:5325 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:53:25:5325 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:53:25:5325 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "clh7j8k9l0000zlrm1abc123",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:53:25:5325 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:53:25:5325 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "clh7j8k9l0000zlrm1abc123",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:53:25:5325 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "clh7j8k9l0000zlrm1abc123",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 04:53:25:5325 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["clh7j8k9l0000zlrm1abc123",true,1,0][39m
2025-06-18 04:53:25:5325 [31merror[39m: [31mError creating meal: Food not found[39m {
  "statusCode": 404,
  "errors": null,
  "isOperational": true,
  "stack": "Error: Food not found\n    at MealService.createMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:35:15)\n    at async MealController.createMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:14:20)"
}
2025-06-18 04:53:25:5325 [31merror[39m: [31mFood not found - /api/meals - POST - ::1[39m {
  "stack": "Error: Food not found\n    at MealService.createMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:35:15)\n    at async MealController.createMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:14:20)",
  "body": {
    "foodId": "clh7j8k9l0000zlrm1abc123",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "params": {},
  "query": {}
}
2025-06-18 04:53:25:5325 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:53:25 +0000] "POST /api/meals HTTP/1.1" 404 56 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:54:11:5411 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:54:11:5411 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:54:11:5411 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "search": "chicken",
    "category": "poultry",
    "page": "0",
    "limit": "50"
  },
  "params": {}
}
2025-06-18 04:54:11:5411 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:54:11:5411 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "search": "chicken",
    "category": "poultry",
    "page": "0",
    "limit": "50"
  },
  "params": {}
}
2025-06-18 04:54:11:5411 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "search": "chicken",
    "category": "poultry",
    "page": 0,
    "limit": 50
  }
}
2025-06-18 04:54:11:5411 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` LEFT JOIN `db_gohealth`.`FoodCategory` AS `j0` ON (`j0`.`id`) = (`db_gohealth`.`Food`.`categoryId`) WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ? AND (`j0`.`slug` = ? AND (`j0`.`id` IS NOT NULL))) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%chicken%","poultry",50,0][39m
2025-06-18 04:54:11:5411 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`Food`.`id` FROM `db_gohealth`.`Food` LEFT JOIN `db_gohealth`.`FoodCategory` AS `j0` ON (`j0`.`id`) = (`db_gohealth`.`Food`.`categoryId`) WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ? AND (`j0`.`slug` = ? AND (`j0`.`id` IS NOT NULL)))) AS `sub` - Params: [true,"%chicken%","poultry"][39m
2025-06-18 04:54:11:5411 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:54:11 +0000] "GET /api/meals/foods?search=chicken&category=poultry&page=0&limit=50 HTTP/1.1" 200 136 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:54:19:5419 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:54:19:5419 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "50"
  },
  "params": {}
}
2025-06-18 04:54:19:5419 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:54:19:5419 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "50"
  },
  "params": {}
}
2025-06-18 04:54:19:5419 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 50
  }
}
2025-06-18 04:54:19:5419 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,50,0][39m
2025-06-18 04:54:19:5419 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?,?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","209a9945-5e76-4c04-bf68-baa0162c331a","fead93d8-15fd-45df-bbef-50e7113ed91b","74586580-b2d6-4043-a1f5-4184150061a4","714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 04:54:19:5419 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`Food`.`id` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ?) AS `sub` - Params: [true][39m
2025-06-18 04:54:19:5419 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:54:19 +0000] "GET /api/meals/foods?page=0&limit=50 HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["204e0a13-a0a3-4ce1-8775-53235ceb72a7","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2022-12-31 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 21:54:41.361 UTC","2025-06-17 21:54:41.361 UTC"][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["204e0a13-a0a3-4ce1-8775-53235ceb72a7",1,0][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 04:54:41:5441 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 04:54:41:5441 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 04:54:41:5441 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:54:41 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:55:18:5518 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:55:18:5518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:55:18:5518 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "06-18-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 04:55:18:5518 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:55:18:5518 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "06-18-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 04:55:18:5518 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 04:55:18:5518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","BREAKFAST",10,0][39m
2025-06-18 04:55:18:5518 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 04:55:18:5518 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:55:18 +0000] "GET /api/meals?page=0&limit=10&date=06-18-2025&mealType=BREAKFAST HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:55:21:5521 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:55:21:5521 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "06-18-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:55:21:5521 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 04:55:21:5521 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "06-18-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 04:55:21:5521 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 04:55:21:5521 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 04:55:21:5521 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","LUNCH"][39m
2025-06-18 04:55:21:5521 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:55:21 +0000] "GET /api/meals?page=0&limit=10&date=06-18-2025&mealType=LUNCH HTTP/1.1" 200 141 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "PUT",
  "path": "/204e0a13-a0a3-4ce1-8775-53235ceb72a7",
  "body": {
    "quantity": 2,
    "unit": "porsi",
    "mealType": "DINNER"
  },
  "query": {},
  "params": {
    "mealId": "204e0a13-a0a3-4ce1-8775-53235ceb72a7"
  }
}
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mSchema structure:[39m {
  "schemaKeys": [
    "quantity",
    "unit",
    "mealType"
  ]
}
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mData to validate:[39m {
  "quantity": 2,
  "unit": "porsi",
  "mealType": "DINNER"
}
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "quantity": 2,
  "unit": "porsi",
  "mealType": "DINNER"
}
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["204e0a13-a0a3-4ce1-8775-53235ceb72a7","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) - Params: ["204e0a13-a0a3-4ce1-8775-53235ceb72a7"][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: UPDATE `db_gohealth`.`UserMeal` SET `quantity` = ?, `unit` = ?, `mealType` = ?, `totalCalories` = ?, `totalProtein` = ?, `totalFat` = ?, `totalCarbs` = ?, `updatedAt` = ? WHERE (`db_gohealth`.`UserMeal`.`id` IN (?) AND (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1)) - Params: [2,"porsi","DINNER",30,1,0.2,7,"2025-06-17 21:55:48.729 UTC","204e0a13-a0a3-4ce1-8775-53235ceb72a7","204e0a13-a0a3-4ce1-8775-53235ceb72a7"][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["204e0a13-a0a3-4ce1-8775-53235ceb72a7",1,0][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 04:55:48:5548 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 04:55:48:5548 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:55:48 +0000] "PUT /api/meals/204e0a13-a0a3-4ce1-8775-53235ceb72a7 HTTP/1.1" 200 755 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 04:56:04:564 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 04:56:04:564 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:56:04:564 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["204e0a13-a0a3-4ce1-8775-53235ceb72a7","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 04:56:04:564 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 04:56:04:564 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["204e0a13-a0a3-4ce1-8775-53235ceb72a7",1,0][39m
2025-06-18 04:56:04:564 [34mdebug[39m: [34mQuery: DELETE FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) - Params: ["204e0a13-a0a3-4ce1-8775-53235ceb72a7"][39m
2025-06-18 04:56:04:564 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 04:56:04:564 [35mhttp[39m: [35m::1 - - [17/Jun/2025:21:56:04 +0000] "DELETE /api/meals/204e0a13-a0a3-4ce1-8775-53235ceb72a7 HTTP/1.1" 200 66 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:03:18:318 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:03:18:318 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:03:18:318 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:03:18:318 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:03:18:318 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 retrieved profile[39m
2025-06-18 05:03:18:318 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:03:18 +0000] "GET /api/users/profile HTTP/1.1" 200 330 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:03:18:318 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:03:18:318 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:03:18:318 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:03:18:318 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:03:18:318 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:03:18 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1389 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/favorites",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 05:04:49:449 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:04:49:449 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 05:04:49:449 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 20
  }
}
2025-06-18 05:04:49:449 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 05:04:49:449 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:04:49:449 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 05:04:49:449 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 20
  }
}
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id`, `db_gohealth`.`FavoriteFood`.`userId`, `db_gohealth`.`FavoriteFood`.`foodId`, `db_gohealth`.`FavoriteFood`.`createdAt`, `db_gohealth`.`FavoriteFood`.`updatedAt` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`userId` = ? ORDER BY `db_gohealth`.`FavoriteFood`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",20,0][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["BUAH-001","SAYUR-001"][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["209a9945-5e76-4c04-bf68-baa0162c331a","964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,20,0][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt`, COALESCE(`aggr_selection_0_Food`.`_aggr_count_foods`, 0) AS `_aggr_count_foods` FROM `db_gohealth`.`FoodCategory` LEFT JOIN (SELECT `db_gohealth`.`Food`.`categoryId`, COUNT(*) AS `_aggr_count_foods` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? GROUP BY `db_gohealth`.`Food`.`categoryId`) AS `aggr_selection_0_Food` ON (`db_gohealth`.`FoodCategory`.`id` = `aggr_selection_0_Food`.`categoryId`) WHERE 1=1 ORDER BY `db_gohealth`.`FoodCategory`.`name` ASC - Params: [true][39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","209a9945-5e76-4c04-bf68-baa0162c331a","fead93d8-15fd-45df-bbef-50e7113ed91b","74586580-b2d6-4043-a1f5-4184150061a4"][39m
2025-06-18 05:04:49:449 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:04:49 +0000] "GET /api/meals/foods/categories HTTP/1.1" 200 1453 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`FavoriteFood`.`id` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`userId` = ?) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65"][39m
2025-06-18 05:04:49:449 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:04:49 +0000] "GET /api/meals/favorites?page=0&limit=20 HTTP/1.1" 200 1258 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:04:49:449 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`Food`.`id` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ?) AS `sub` - Params: [true][39m
2025-06-18 05:04:49:449 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:04:49 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 200 8051 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:04:52:452 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:04:52:452 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20",
    "category": "ikan-seafood"
  },
  "params": {}
}
2025-06-18 05:04:52:452 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:04:52:452 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20",
    "category": "ikan-seafood"
  },
  "params": {}
}
2025-06-18 05:04:52:452 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 20,
    "category": "ikan-seafood"
  }
}
2025-06-18 05:04:52:452 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` LEFT JOIN `db_gohealth`.`FoodCategory` AS `j0` ON (`j0`.`id`) = (`db_gohealth`.`Food`.`categoryId`) WHERE (`db_gohealth`.`Food`.`isActive` = ? AND (`j0`.`slug` = ? AND (`j0`.`id` IS NOT NULL))) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"ikan-seafood",20,0][39m
2025-06-18 05:04:52:452 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:04:52:452 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`Food`.`id` FROM `db_gohealth`.`Food` LEFT JOIN `db_gohealth`.`FoodCategory` AS `j0` ON (`j0`.`id`) = (`db_gohealth`.`Food`.`categoryId`) WHERE (`db_gohealth`.`Food`.`isActive` = ? AND (`j0`.`slug` = ? AND (`j0`.`id` IS NOT NULL)))) AS `sub` - Params: [true,"ikan-seafood"][39m
2025-06-18 05:04:52:452 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:04:52 +0000] "GET /api/meals/foods?page=0&limit=20&category=ikan-seafood HTTP/1.1" 200 4735 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["IKAN-006",true,1,0][39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id` FROM `db_gohealth`.`FavoriteFood` WHERE ((`db_gohealth`.`FavoriteFood`.`userId` = ? AND `db_gohealth`.`FavoriteFood`.`foodId` = ?) AND 1=1) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","IKAN-006"][39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`FavoriteFood` (`id`,`userId`,`foodId`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?) - Params: ["d0f16c20-6adb-4ae9-960d-6dde11e540c6","05110d89-00ca-4d66-8630-0632463e2c65","IKAN-006","2025-06-17 22:04:55.840 UTC","2025-06-17 22:04:55.840 UTC"][39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id`, `db_gohealth`.`FavoriteFood`.`userId`, `db_gohealth`.`FavoriteFood`.`foodId`, `db_gohealth`.`FavoriteFood`.`createdAt`, `db_gohealth`.`FavoriteFood`.`updatedAt` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`id` = ? LIMIT ? OFFSET ? - Params: ["d0f16c20-6adb-4ae9-960d-6dde11e540c6",1,0][39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["IKAN-006"][39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:04:55:455 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 05:04:55:455 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:04:55 +0000] "POST /api/meals/favorites/IKAN-006 HTTP/1.1" 201 660 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["IKAN-007",true,1,0][39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id` FROM `db_gohealth`.`FavoriteFood` WHERE ((`db_gohealth`.`FavoriteFood`.`userId` = ? AND `db_gohealth`.`FavoriteFood`.`foodId` = ?) AND 1=1) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","IKAN-007"][39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`FavoriteFood` (`id`,`userId`,`foodId`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?) - Params: ["c3f3030b-a184-418d-8a78-89fc1357cd30","05110d89-00ca-4d66-8630-0632463e2c65","IKAN-007","2025-06-17 22:04:59.775 UTC","2025-06-17 22:04:59.775 UTC"][39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id`, `db_gohealth`.`FavoriteFood`.`userId`, `db_gohealth`.`FavoriteFood`.`foodId`, `db_gohealth`.`FavoriteFood`.`createdAt`, `db_gohealth`.`FavoriteFood`.`updatedAt` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`id` = ? LIMIT ? OFFSET ? - Params: ["c3f3030b-a184-418d-8a78-89fc1357cd30",1,0][39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["IKAN-007"][39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:04:59:459 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 05:04:59:459 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:04:59 +0000] "POST /api/meals/favorites/IKAN-007 HTTP/1.1" 201 665 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:02:52 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:02:52 [34mdebug[39m: [34mQuery: DELETE FROM `db_gohealth`.`FavoriteFood` WHERE (`db_gohealth`.`FavoriteFood`.`userId` = ? AND `db_gohealth`.`FavoriteFood`.`foodId` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","IKAN-007"][39m
2025-06-18 05:05:02:52 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:02 +0000] "DELETE /api/meals/favorites/IKAN-007 HTTP/1.1" 200 81 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["IKAN-007",true,1,0][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id` FROM `db_gohealth`.`FavoriteFood` WHERE ((`db_gohealth`.`FavoriteFood`.`userId` = ? AND `db_gohealth`.`FavoriteFood`.`foodId` = ?) AND 1=1) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","IKAN-007"][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`FavoriteFood` (`id`,`userId`,`foodId`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?) - Params: ["716f0b9d-cc77-466a-96fa-8f133c843186","05110d89-00ca-4d66-8630-0632463e2c65","IKAN-007","2025-06-17 22:05:06.276 UTC","2025-06-17 22:05:06.276 UTC"][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id`, `db_gohealth`.`FavoriteFood`.`userId`, `db_gohealth`.`FavoriteFood`.`foodId`, `db_gohealth`.`FavoriteFood`.`createdAt`, `db_gohealth`.`FavoriteFood`.`updatedAt` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`id` = ? LIMIT ? OFFSET ? - Params: ["716f0b9d-cc77-466a-96fa-8f133c843186",1,0][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["IKAN-007"][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:05:06:56 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 05:05:06:56 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:06 +0000] "POST /api/meals/favorites/IKAN-007 HTTP/1.1" 201 665 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:11:511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:11:511 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:11:511 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:05:11:511 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:11:511 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:05:11:511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:05:11:511 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:11 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:11:511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:11:511 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:11:511 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:05:11:511 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:11:511 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:05:11:511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 05:05:11:511 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:05:11:511 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:11 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:29:529 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:05:29:529 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:05:29:529 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:05:29:529 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:29:529 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:05:29:529 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:05:29:529 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:29 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1389 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:32:532 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:32:532 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:32:532 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:05:32:532 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:32:532 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:05:32:532 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:05:32:532 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:32 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:32:532 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:32:532 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:32:532 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:05:32:532 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:32:532 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:05:32:532 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 05:05:32:532 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:05:32:532 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:32 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:37:537 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:37:537 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%ik%",10,0][39m
2025-06-18 05:05:37:537 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e","a32e27ea-216c-4503-acad-34a698813e53","ed0ff7db-bae3-4513-aaf2-d9b2c745c3e5"][39m
2025-06-18 05:05:37:537 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:37 +0000] "GET /api/meals/foods/autocomplete?query=ik&limit=10 HTTP/1.1" 200 741 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "IKAN-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 05:05:43:543 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 05:05:43:543 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "IKAN-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 05:05:43:543 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "IKAN-003",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["IKAN-003",true,1,0][39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["3b3a6f40-4232-4b97-96e8-b42602f220a4","05110d89-00ca-4d66-8630-0632463e2c65","IKAN-003","BREAKFAST","2025-06-17 17:00:00 UTC",100,"gram",14600,2162,593,0,"2025-06-17 22:05:43.568 UTC","2025-06-17 22:05:43.568 UTC"][39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["3b3a6f40-4232-4b97-96e8-b42602f220a4",1,0][39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["IKAN-003"][39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:05:43:543 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 05:05:43:543 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 05:05:43:543 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:43 +0000] "POST /api/meals HTTP/1.1" 201 791 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:44:544 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:44:544 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:44:544 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:05:44:544 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:44:544 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:05:44:544 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:05:44:544 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:44 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:05:44:544 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:05:44:544 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:44:544 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:05:44:544 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:05:44:544 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:05:44:544 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 05:05:44:544 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:05:44:544 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:05:44 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:06:10:610 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:06:10:610 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:06:10:610 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%ikan%",10,0][39m
2025-06-18 05:06:10:610 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:06:10:610 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:06:10 +0000] "GET /api/meals/foods/autocomplete?query=ikan&limit=10 HTTP/1.1" 200 535 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "IKAN-009",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 05:06:19:619 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 05:06:19:619 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "IKAN-009",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 05:06:19:619 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "IKAN-009",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["IKAN-009",true,1,0][39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["afc6688a-1d66-40bb-baae-a86d646ddf4b","05110d89-00ca-4d66-8630-0632463e2c65","IKAN-009","BREAKFAST","2025-06-17 17:00:00 UTC",100,"gram",14600,2162,593,0,"2025-06-17 22:06:19.514 UTC","2025-06-17 22:06:19.514 UTC"][39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["afc6688a-1d66-40bb-baae-a86d646ddf4b",1,0][39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["IKAN-009"][39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 05:06:19:619 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 05:06:19:619 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 05:06:19:619 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:06:19 +0000] "POST /api/meals HTTP/1.1" 201 800 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:06:20:620 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:06:20:620 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:06:20:620 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:06:20:620 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:06:20:620 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:06:20:620 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:06:20:620 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:06:20:620 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:06:20:620 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:06:20:620 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:06:20:620 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 05:06:20:620 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:06:20:620 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:06:20:620 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:06:20 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:06:20:620 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:06:20:620 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:06:20 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:06:46:646 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:06:46:646 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:06:46:646 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:06:46:646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:06:46:646 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:06:46:646 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:06:46:646 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:06:46 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1390 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:07:17:717 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:07:17:717 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:07:17:717 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:07:17:717 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:07:17:717 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:07:17:717 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:07:17:717 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:07:17:717 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:07:17 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:07:17:717 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:07:17:717 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:07:17:717 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:07:17:717 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:07:17:717 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:07:17:717 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 05:07:17:717 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:07:17:717 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:07:17 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:07:49:749 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:07:49:749 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:07:49:749 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["dummy1","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:07:49:749 [31merror[39m: [31mError deleting meal: Meal not found[39m {
  "statusCode": 404,
  "errors": null,
  "isOperational": true,
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:177:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)"
}
2025-06-18 05:07:49:749 [31merror[39m: [31mMeal not found - /api/meals/dummy1 - DELETE - ::1[39m {
  "stack": "Error: Meal not found\n    at MealService.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\services\\meal.service.js:177:15)\n    at async MealController.deleteMeal (C:\\Users\\USER\\Documents\\code\\tugas-kuliah\\tugas-multi-platform\\gohealth-api\\src\\controllers\\meal.controller.js:67:7)",
  "params": {},
  "query": {}
}
2025-06-18 05:07:49:749 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:07:49 +0000] "DELETE /api/meals/dummy1 HTTP/1.1" 404 56 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:11:32:1132 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:11:32:1132 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:11:32:1132 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:11:32:1132 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:11:32:1132 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:11:32:1132 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:11:32:1132 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:11:32 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1390 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:11:36:1136 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:11:36 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:11:36:1136 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:11:36:1136 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:11:36 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:13:49:1349 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:13:49:1349 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:13:49:1349 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:13:49:1349 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:13:49:1349 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:13:49:1349 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:13:49:1349 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:13:49 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1390 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:14:16:1416 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:14:16:1416 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:14:16:1416 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:14:16:1416 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:14:16:1416 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:14:16:1416 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:14:16:1416 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:14:16 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1390 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:14:36:1436 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:14:36:1436 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:14:36:1436 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:14:36:1436 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:14:36:1436 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:14:36:1436 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:14:36:1436 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:14:36 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1390 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:15:00:150 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:15:00:150 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:15:00:150 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:15:00:150 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:15:00:150 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:15:00:150 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:15:00:150 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:15:00 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1390 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:15:18:1518 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:15:18:1518 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:15:18:1518 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:15:18:1518 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:15:18:1518 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:15:18:1518 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:15:18:1518 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:15:18 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1390 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:59:36:5936 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:59:36:5936 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:59:36:5936 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:59:36:5936 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:59:36:5936 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:59:36:5936 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:59:36:5936 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:59:36:5936 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 retrieved profile[39m
2025-06-18 05:59:36:5936 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:59:36 +0000] "GET /api/users/profile HTTP/1.1" 200 330 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:59:37:5937 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 05:59:37:5937 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 05:59:37:5937 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-15 00:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-16 00:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 00:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-18 00:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-19 00:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-20 00:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-21 00:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mFound 0 meals[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mTotal calories consumed: 0[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"2025-06-17 17:00:00 UTC",1,0][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 05:59:37:5937 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:59:37:5937 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 05:59:37:5937 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 05:59:37:5937 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:59:37 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1390 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:59:44:5944 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:59:44 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 288 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC",10,0][39m
2025-06-18 05:59:44:5944 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC"][39m
2025-06-18 05:59:44:5944 [35mhttp[39m: [35m::1 - - [17/Jun/2025:22:59:44 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 200 141 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:00:21:021 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:00:21:021 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:00:21:021 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["e61834a6-1a39-4f9d-b7a5-749d376bddfc","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2022-12-31 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:00:21.335 UTC","2025-06-17 23:00:21.335 UTC"][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["e61834a6-1a39-4f9d-b7a5-749d376bddfc",1,0][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:00:21:021 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:00:21:021 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:00:21:021 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:21 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:00:24:024 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:00:24:024 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:00:24:024 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["18d4c514-41f0-452d-ac47-ab00b458d5e6","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2022-12-31 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:00:24.491 UTC","2025-06-17 23:00:24.491 UTC"][39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["18d4c514-41f0-452d-ac47-ab00b458d5e6",1,0][39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:00:24:024 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:00:24:024 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:00:24:024 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:24 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:00:25:025 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:00:25:025 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:00:25:025 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["6c56b710-08f5-49fe-a172-9bf7346841b5","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2022-12-31 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:00:25.281 UTC","2025-06-17 23:00:25.281 UTC"][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["6c56b710-08f5-49fe-a172-9bf7346841b5",1,0][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:00:25:025 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:00:25:025 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:25 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:00:25:025 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:00:25:025 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:00:25:025 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["fff39112-7ca5-4f48-9225-5a55bfd2afe0","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2022-12-31 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:00:25.657 UTC","2025-06-17 23:00:25.657 UTC"][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["fff39112-7ca5-4f48-9225-5a55bfd2afe0",1,0][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:00:25:025 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:00:25:025 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:00:25:025 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:25 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:31:031 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:31:031 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "06-18-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:31:031 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:00:31:031 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "06-18-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:31:031 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:00:31:031 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 06:00:31:031 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:00:31:031 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:31 +0000] "GET /api/meals?page=0&limit=10&date=06-18-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:42:042 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:00:42:042 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:42:042 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:42:042 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:00:42:042 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:42:042 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:00:42:042 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 06:00:42:042 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:00:42:042 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:42 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:46:046 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:46:046 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:46:046 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:00:46:046 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:46:046 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:00:46:046 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 06:00:46:046 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:00:46:046 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:46 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:47:047 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:47:047 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:47:047 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:00:47:047 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:47:047 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:00:47:047 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 06:00:47:047 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:00:47:047 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:47 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:50:050 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:50:050 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:50:050 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:00:50:050 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:00:50:050 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:00:50:050 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",10,0][39m
2025-06-18 06:00:50:050 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:00:50:050 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:50 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:00:52:052 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:00:52:052 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:00:52:052 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:00:52:052 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:00:52:052 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 06:00:52:052 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST",10,0][39m
2025-06-18 06:00:52:052 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 06:00:52:052 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:00:52 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:01:00:10 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:01:00:10 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:01:00:10 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:01:00:10 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:01:00:10 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:01:00:10 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 06:01:00:10 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST",100,0][39m
2025-06-18 06:01:00:10 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 06:01:00:10 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:01:00 +0000] "GET /api/meals?page=0&limit=100&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 200 142 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:01:01:11 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:01:01:11 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:01:01:11 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:01:01:11 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:01:01:11 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 0,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 06:01:01:11 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST",100,0][39m
2025-06-18 06:01:01:11 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 06:01:01:11 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:01:01 +0000] "GET /api/meals?page=0&limit=100&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:01:04:14 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:01:04:14 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:01:04:14 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:01:04:14 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:01:04:14 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 06:01:04:14 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST",100,100][39m
2025-06-18 06:01:04:14 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 06:01:04:14 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:01:04 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 200 142 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:01:05:15 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:01:05:15 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:01:05:15 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:01:05:15 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:01:05:15 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 06:01:05:15 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST",100,100][39m
2025-06-18 06:01:05:15 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","BREAKFAST"][39m
2025-06-18 06:01:05:15 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:01:05 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:01:10:110 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:01:10:110 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:01:10:110 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:01:10:110 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:01:10:110 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:01:10:110 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",100,100][39m
2025-06-18 06:01:10:110 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:01:10:110 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:01:10 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 200 142 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:01:44:144 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:01:44:144 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:01:44:144 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["e7ce5be1-4ed1-4dd8-9488-1d20917333bc","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2022-12-31 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:01:44.147 UTC","2025-06-17 23:01:44.147 UTC"][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["e7ce5be1-4ed1-4dd8-9488-1d20917333bc",1,0][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:01:44:144 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:01:44:144 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:01:44:144 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:01:44 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:01:49:149 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:01:49:149 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:01:49:149 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["7a6b7fd2-00b7-401f-a0f5-55cd2dd73668","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2022-12-31 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:01:49.518 UTC","2025-06-17 23:01:49.518 UTC"][39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["7a6b7fd2-00b7-401f-a0f5-55cd2dd73668",1,0][39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:01:49:149 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:01:49:149 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:01:49:149 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:01:49 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:01:53:153 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:01:53:153 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "01-01-2023",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:01:53:153 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2022-12-31T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["83143ae4-6d7d-409b-95d6-f43a2f6b7fd1","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2022-12-31 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:01:53.266 UTC","2025-06-17 23:01:53.266 UTC"][39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["83143ae4-6d7d-409b-95d6-f43a2f6b7fd1",1,0][39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:01:53:153 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:01:53:153 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:01:53:153 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:01:53 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:02:18:218 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:02:18:218 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:02:18:218 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2025-06-17T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["bbb8a1c9-901b-4bf1-b390-0712c3f4b87f","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","2025-06-17 17:00:00 UTC",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:02:18.157 UTC","2025-06-17 23:02:18.157 UTC"][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["bbb8a1c9-901b-4bf1-b390-0712c3f4b87f",1,0][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:02:18:218 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:02:18:218 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:02:18:218 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:02:18 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:02:24:224 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:02:24:224 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:02:24:224 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:02:24:224 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:02:24:224 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:02:24:224 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH",100,100][39m
2025-06-18 06:02:24:224 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2025-06-17 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:02:24:224 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:02:24 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:03:01:31 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:03:01:31 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:03:01:31 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "06-18-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:03:01:31 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:03:01:31 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "06-18-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:03:01:31 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:03:01:31 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","LUNCH",100,100][39m
2025-06-18 06:03:01:31 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-06-05 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:03:01:31 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:03:01 +0000] "GET /api/meals?page=1&limit=100&date=06-18-2025&mealType=LUNCH HTTP/1.1" 200 142 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:03:12:312 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:03:12:312 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "06-17-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:03:12:312 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:03:12:312 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "06-17-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:03:12:312 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-16T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:03:12:312 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-05-05 17:00:00 UTC","LUNCH",100,100][39m
2025-06-18 06:03:12:312 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","2026-05-05 17:00:00 UTC","LUNCH"][39m
2025-06-18 06:03:12:312 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:03:12 +0000] "GET /api/meals?page=1&limit=100&date=06-17-2025&mealType=LUNCH HTTP/1.1" 200 142 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:06:22:622 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:06:22:622 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:06:22:622 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:06:42:642 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:06:42:642 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:06:42:642 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:06:47:647 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:06:47:647 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:06:47:647 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:07:03:73 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:07:03:73 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:07:03:73 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:07:19:719 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:07:19:719 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:07:19:719 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:07:20:720 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:07:20:720 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:07:20:720 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:07:29:729 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:07:29:729 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:07:29:729 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:07:59:759 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:07:59:759 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:07:59:759 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:08:01:81 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:08:01:81 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:08:01:81 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:08:54:854 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:08:54:854 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:08:54:854 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:09:22:922 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:09:22:922 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:09:22:922 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:09:44:944 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:09:44:944 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:09:44:944 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:09:46:946 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:09:46:946 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:09:46:946 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:10:04:104 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:10:04:104 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:10:04:104 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:10:09:109 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:10:09:109 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:10:09:109 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:10:23:1023 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:10:23:1023 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:10:23:1023 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2025-06-17T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","18-06-2025",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:10:34.787 UTC","2025-06-17 23:10:34.787 UTC"][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3",1,0][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:10:34:1034 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:10:34:1034 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:10:34:1034 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:10:34 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:10:46:1046 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:10:46:1046 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:10:46:1046 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:10:46:1046 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:10:46:1046 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:10:46:1046 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH",100,100][39m
2025-06-18 06:10:46:1046 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH"][39m
2025-06-18 06:10:46:1046 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:10:46 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 200 142 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:10:48:1048 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:10:48:1048 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:10:48:1048 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:10:48:1048 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:10:48:1048 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:10:48:1048 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH",100,100][39m
2025-06-18 06:10:48:1048 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH"][39m
2025-06-18 06:10:48:1048 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:10:48 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/login",
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Password is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  }
}
2025-06-18 06:10:56:1056 [32minfo[39m: [32mLogin attempt for email: test@test.com[39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mFinding user by email...[39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["test@test.com",1,0][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mVerifying password...[39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mGenerating authentication tokens...[39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mGenerating tokens for user eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 06:10:56:1056 [32minfo[39m: [32mUser eec63bcf-2dc2-44fd-8259-7d28f0217392 logged in successfully[39m
2025-06-18 06:10:56:1056 [32minfo[39m: [32mUser logged in with email: test@test.com[39m
2025-06-18 06:10:56:1056 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:10:56 +0000] "POST /api/auth/login HTTP/1.1" 200 657 "-" "axios/1.9.0"[39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392",1,0][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2025-06-17T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["579cbf0c-ef6e-46b2-875c-814c8deefd00","eec63bcf-2dc2-44fd-8259-7d28f0217392","SAYUR-001","LUNCH","18-06-2025",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:10:56.355 UTC","2025-06-17 23:10:56.355 UTC"][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["579cbf0c-ef6e-46b2-875c-814c8deefd00",1,0][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:10:56:1056 [32minfo[39m: [32mUser eec63bcf-2dc2-44fd-8259-7d28f0217392 created a meal[39m
2025-06-18 06:10:56:1056 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:10:56 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "axios/1.9.0"[39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392",1,0][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z",
    "page": 0,
    "limit": 10
  }
}
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392","18-06-2025",10,0][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:10:56:1056 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392","18-06-2025"][39m
2025-06-18 06:10:56:1056 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:10:56 +0000] "GET /api/meals?date=18-06-2025 HTTP/1.1" 200 844 "-" "axios/1.9.0"[39m
2025-06-18 06:11:09:119 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:11:09:119 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:11:09:119 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:11:09:119 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:11:09:119 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:11:09:119 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH",100,100][39m
2025-06-18 06:11:09:119 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH"][39m
2025-06-18 06:11:09:119 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:11:09 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:11:19:1119 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:11:19:1119 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:11:19:1119 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:12:54:1254 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:12:54:1254 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:12:54:1254 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:13:08:138 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:13:08:138 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:13:08:138 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:13:21:1321 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:13:21:1321 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:13:21:1321 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:13:23:1323 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:13:23:1323 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:13:23:1323 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 0
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 0
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH",100,0][39m
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:13:23:1323 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH"][39m
2025-06-18 06:13:23:1323 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:13:23 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 200 845 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:13:33:1333 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:13:33:1333 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:13:33:1333 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:13:37:1337 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:13:37:1337 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:13:37:1337 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:13:52:1352 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:13:52:1352 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:13:52:1352 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:13:55:1355 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:13:55:1355 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:13:55:1355 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "PUT",
  "path": "/c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3",
  "body": {
    "quantity": 2,
    "unit": "porsi",
    "mealType": "DINNER"
  },
  "query": {},
  "params": {
    "mealId": "c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3"
  }
}
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mSchema structure:[39m {
  "schemaKeys": [
    "quantity",
    "unit",
    "mealType"
  ]
}
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mData to validate:[39m {
  "quantity": 2,
  "unit": "porsi",
  "mealType": "DINNER"
}
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "quantity": 2,
  "unit": "porsi",
  "mealType": "DINNER"
}
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) - Params: ["c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3"][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: UPDATE `db_gohealth`.`UserMeal` SET `quantity` = ?, `unit` = ?, `mealType` = ?, `totalCalories` = ?, `totalProtein` = ?, `totalFat` = ?, `totalCarbs` = ?, `updatedAt` = ? WHERE (`db_gohealth`.`UserMeal`.`id` IN (?) AND (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1)) - Params: [2,"porsi","DINNER",30,1,0.2,7,"2025-06-17 23:14:17.837 UTC","c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3","c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3"][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3",1,0][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:14:17:1417 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:14:17:1417 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:14:17 +0000] "PUT /api/meals/c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3 HTTP/1.1" 200 755 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:14:29:1429 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:14:29:1429 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:14:29:1429 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:14:29:1429 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3",1,0][39m
2025-06-18 06:14:29:1429 [34mdebug[39m: [34mQuery: DELETE FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) - Params: ["c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3"][39m
2025-06-18 06:14:29:1429 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:14:29:1429 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:14:29 +0000] "DELETE /api/meals/c0b00eb7-9050-4ae4-82ff-6fe4e08c49c3 HTTP/1.1" 200 66 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:14:40:1440 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:14:40:1440 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:14:40:1440 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2025-06-17T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["a15eb035-428c-4f28-8eb1-8f2f36ecb03f","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","18-06-2025",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:14:40.988 UTC","2025-06-17 23:14:40.988 UTC"][39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["a15eb035-428c-4f28-8eb1-8f2f36ecb03f",1,0][39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:14:40:1440 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:14:40:1440 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:14:41:1441 [35mhttp[39m: [35m::ffff:127.0.0.1 - - [17/Jun/2025:23:14:41 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:14:46:1446 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:14:46:1446 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:14:46:1446 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:14:47:1447 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:14:47:1447 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:14:47:1447 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:15:49:1549 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 06:15:49:1549 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 06:15:49:1549 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 retrieved profile[39m
2025-06-18 06:15:49:1549 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:15:49 +0000] "GET /api/users/profile HTTP/1.1" 200 330 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:15:49:1549 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 06:15:49:1549 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 06:15:49:1549 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFound 1 meals[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mTotal calories consumed: 22.5[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 06:15:49:1549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:15:49:1549 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 06:15:49:1549 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 06:15:49:1549 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:15:49 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:16:22:1622 [31merror[39m: [31mValidation failed:[39m {
  "path": "/",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 06:16:22:1622 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:16:22 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:16:22:1622 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:16:22:1622 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:16:22 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 1015 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:16:56:1656 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:16:56:1656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:16:56:1656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%ayy%",10,0][39m
2025-06-18 06:16:56:1656 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:16:56 +0000] "GET /api/meals/foods/autocomplete?query=ayy&limit=10 HTTP/1.1" 200 78 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:17:00:170 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:17:00:170 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%ay%",10,0][39m
2025-06-18 06:17:00:170 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b","964331b7-5586-4e83-be77-d5b0722f6d9e","209a9945-5e76-4c04-bf68-baa0162c331a"][39m
2025-06-18 06:17:00:170 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:17:00 +0000] "GET /api/meals/foods/autocomplete?query=ay&limit=10 HTTP/1.1" 200 943 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:17:03:173 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:17:03:173 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["DAGING-001",true,1,0][39m
2025-06-18 06:17:03:173 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 06:17:03:173 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:17:03 +0000] "GET /api/meals/foods/DAGING-001 HTTP/1.1" 200 454 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "DAGING-001",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:17:07:177 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:17:07:177 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "DAGING-001",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:17:07:177 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "DAGING-001",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["DAGING-001",true,1,0][39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["9cac3d6c-c464-4073-9983-70e59141416b","05110d89-00ca-4d66-8630-0632463e2c65","DAGING-001","BREAKFAST","18-06-2025",100,"gram",15000,2000,1000,0,"2025-06-17 23:17:07.666 UTC","2025-06-17 23:17:07.666 UTC"][39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["9cac3d6c-c464-4073-9983-70e59141416b",1,0][39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["DAGING-001"][39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 06:17:07:177 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:17:07:177 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:17:07:177 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:17:07 +0000] "POST /api/meals HTTP/1.1" 201 762 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:17:09:179 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:17:09:179 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:17:09:179 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:17:09:179 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:17:09:179 [31merror[39m: [31mValidation failed:[39m {
  "path": "/",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 06:17:09:179 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:17:09 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:17:09:179 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:17:09:179 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:17:09:179 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:17:09:179 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 06:17:09:179 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 06:17:09:179 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 06:17:09:179 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["DAGING-001","SAYUR-001"][39m
2025-06-18 06:17:09:179 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b","964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:17:09:179 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:17:09 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 1733 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH",100,0][39m
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:17:43:1743 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH"][39m
2025-06-18 06:17:43:1743 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:17:43 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 200 845 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","BREAKFAST",100,0][39m
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["DAGING-001"][39m
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 06:17:56:1756 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","BREAKFAST"][39m
2025-06-18 06:17:56:1756 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:17:56 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 200 842 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:18:01:181 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:18:01:181 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "18-06-2025",
    "quantity": 1.5,
    "unit": "porsi"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:18:01:181 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "SAYUR-001",
    "mealType": "LUNCH",
    "date": "2025-06-17T17:00:00.000Z",
    "quantity": 1.5,
    "unit": "porsi"
  }
}
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["SAYUR-001",true,1,0][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["218abe36-e25a-42f1-b147-ca5141f44346","05110d89-00ca-4d66-8630-0632463e2c65","SAYUR-001","LUNCH","18-06-2025",1.5,"porsi",22.5,0.75,0.15,5.25,"2025-06-17 23:18:01.946 UTC","2025-06-17 23:18:01.946 UTC"][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["218abe36-e25a-42f1-b147-ca5141f44346",1,0][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:18:01:181 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 06:18:01:181 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 06:18:01:181 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:18:01 +0000] "POST /api/meals HTTP/1.1" 201 765 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "BREAKFAST"
  },
  "params": {}
}
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "BREAKFAST"
  }
}
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","BREAKFAST",100,0][39m
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["DAGING-001"][39m
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 06:18:10:1810 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","BREAKFAST"][39m
2025-06-18 06:18:10:1810 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:18:10 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=BREAKFAST HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH",100,0][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH"][39m
2025-06-18 06:18:20:1820 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:18:20 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 200 1549 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 100,
    "date": "2025-06-17T17:00:00.000Z",
    "mealType": "LUNCH"
  }
}
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH",100,0][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 06:18:20:1820 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ? AND `db_gohealth`.`UserMeal`.`mealType` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025","LUNCH"][39m
2025-06-18 06:18:20:1820 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:18:20 +0000] "GET /api/meals?page=1&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 304 - "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"[39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/login",
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "email": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "rules": [
          {
            "name": "email"
          }
        ],
        "preferences": {
          "messages": {
            "string.email": "Invalid email format",
            "any.required": "Email is required"
          }
        }
      },
      "password": {
        "type": "string",
        "flags": {
          "presence": "required"
        },
        "preferences": {
          "messages": {
            "any.required": "Password is required"
          }
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  },
  "query": {},
  "params": {}
}
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "email": "test@test.com",
    "password": "Test123!"
  }
}
2025-06-18 06:18:25:1825 [32minfo[39m: [32mLogin attempt for email: test@test.com[39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mFinding user by email...[39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`email` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["test@test.com",1,0][39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mVerifying password...[39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mGenerating authentication tokens...[39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mGenerating tokens for user eec63bcf-2dc2-44fd-8259-7d28f0217392[39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mTokens generated successfully[39m
2025-06-18 06:18:25:1825 [32minfo[39m: [32mUser eec63bcf-2dc2-44fd-8259-7d28f0217392 logged in successfully[39m
2025-06-18 06:18:25:1825 [32minfo[39m: [32mUser logged in with email: test@test.com[39m
2025-06-18 06:18:25:1825 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:18:25 +0000] "POST /api/auth/login HTTP/1.1" 200 657 "-" "axios/1.9.0"[39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["eec63bcf-2dc2-44fd-8259-7d28f0217392",1,0][39m
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 06:18:25:1825 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "100",
    "date": "18-06-2025",
    "mealType": "LUNCH"
  },
  "params": {}
}
2025-06-18 06:18:25:1825 [31merror[39m: [31mValidation failed:[39m {
  "path": "/",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 06:18:25:1825 [35mhttp[39m: [35m::1 - - [17/Jun/2025:23:18:25 +0000] "GET /api/meals?page=0&limit=100&date=18-06-2025&mealType=LUNCH HTTP/1.1" 422 134 "-" "axios/1.9.0"[39m
2025-06-18 06:18:53:1853 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 06:18:53:1853 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 06:18:53:1853 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 10:11:59:1159 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 10:11:59:1159 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 10:11:59:1159 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:13:56:1356 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:13:56:1356 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:13:56:1356 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 retrieved profile[39m
2025-06-18 10:13:56:1356 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:13:56 +0000] "GET /api/users/profile HTTP/1.1" 200 330 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:13:56:1356 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:13:56:1356 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:13:56:1356 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFound 3 meals[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mTotal calories consumed: 15045[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:13:56:1356 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:13:56:1356 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:13:56:1356 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:13:56:1356 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:13:56 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt`, COALESCE(`aggr_selection_0_Food`.`_aggr_count_foods`, 0) AS `_aggr_count_foods` FROM `db_gohealth`.`FoodCategory` LEFT JOIN (SELECT `db_gohealth`.`Food`.`categoryId`, COUNT(*) AS `_aggr_count_foods` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? GROUP BY `db_gohealth`.`Food`.`categoryId`) AS `aggr_selection_0_Food` ON (`db_gohealth`.`FoodCategory`.`id` = `aggr_selection_0_Food`.`categoryId`) WHERE 1=1 ORDER BY `db_gohealth`.`FoodCategory`.`name` ASC - Params: [true][39m
2025-06-18 10:14:39:1439 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:14:39 +0000] "GET /api/meals/foods/categories HTTP/1.1" 200 1453 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/favorites",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:14:39:1439 [31merror[39m: [31mValidation failed:[39m {
  "path": "/favorites",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:14:39:1439 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:14:39 +0000] "GET /api/meals/favorites?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:14:39:1439 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:14:39:1439 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:14:39:1439 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:14:39 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:14:42:1442 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:14:42:1442 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:14:42:1442 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:14:42:1442 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:14:42:1442 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:14:42:1442 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:14:42 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:14:44:1444 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:14:44:1444 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:14:44:1444 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:14:44:1444 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:14:44:1444 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:14:44:1444 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:14:44 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:15:14:1514 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:15:14:1514 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:15:14:1514 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20",
    "category": "buah"
  },
  "params": {}
}
2025-06-18 10:15:14:1514 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:15:14:1514 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20",
    "category": "buah"
  },
  "params": {}
}
2025-06-18 10:15:14:1514 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:15:14:1514 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:15:14 +0000] "GET /api/meals/foods?page=0&limit=20&category=buah HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:15:17:1517 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:15:17:1517 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20",
    "category": "daging"
  },
  "params": {}
}
2025-06-18 10:15:17:1517 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:15:17:1517 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20",
    "category": "daging"
  },
  "params": {}
}
2025-06-18 10:15:17:1517 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:15:17:1517 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:15:17 +0000] "GET /api/meals/foods?page=0&limit=20&category=daging HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:15:19:1519 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:15:19:1519 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:15:19:1519 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:15:19:1519 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:15:19:1519 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:15:19:1519 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:15:19 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:16:09:169 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:16:09:169 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:16:09:169 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mFound 3 meals[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mTotal calories consumed: 15045[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:16:09:169 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:16:09:169 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:16:09:169 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:16:09:169 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:16:09 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:16:16:1616 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 10:16:16:1616 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 10:16:16:1616 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 10:16:20:1620 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 10:16:20:1620 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 10:16:20:1620 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 10:16:39:1639 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:16:39:1639 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:16:39:1639 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`categoryId` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`isActive` = ? AND `db_gohealth`.`Food`.`name` LIKE ?) ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,"%aya%",10,0][39m
2025-06-18 10:16:39:1639 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b","964331b7-5586-4e83-be77-d5b0722f6d9e","209a9945-5e76-4c04-bf68-baa0162c331a"][39m
2025-06-18 10:16:39:1639 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:16:39 +0000] "GET /api/meals/foods/autocomplete?query=aya&limit=10 HTTP/1.1" 200 841 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:16:43:1643 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:16:43:1643 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["DAGING-001",true,1,0][39m
2025-06-18 10:16:43:1643 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:16:43:1643 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:16:43 +0000] "GET /api/meals/foods/DAGING-001 HTTP/1.1" 200 454 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "POST",
  "path": "/",
  "body": {
    "foodId": "DAGING-001",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "foodId": {
        "type": "string",
        "flags": {
          "presence": "required"
        }
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true,
          "presence": "required"
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      },
      "date": {
        "type": "date",
        "flags": {
          "presence": "required"
        }
      },
      "quantity": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 0.1
            }
          }
        ]
      },
      "unit": {
        "type": "string",
        "flags": {
          "default": "porsi"
        }
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "foodId": "DAGING-001",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "18-06-2025"
  },
  "query": {},
  "params": {}
}
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "foodId": "DAGING-001",
    "mealType": "BREAKFAST",
    "quantity": 100,
    "unit": "gram",
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE (`db_gohealth`.`Food`.`id` = ? AND `db_gohealth`.`Food`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["DAGING-001",true,1,0][39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: INSERT INTO `db_gohealth`.`UserMeal` (`id`,`userId`,`foodId`,`mealType`,`date`,`quantity`,`unit`,`totalCalories`,`totalProtein`,`totalFat`,`totalCarbs`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) - Params: ["29d9083d-1bee-4a91-87bf-0795fc546b22","05110d89-00ca-4d66-8630-0632463e2c65","DAGING-001","BREAKFAST","18-06-2025",100,"gram",15000,2000,1000,0,"2025-06-18 03:16:47.223 UTC","2025-06-18 03:16:47.223 UTC"][39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE `db_gohealth`.`UserMeal`.`id` = ? LIMIT ? OFFSET ? - Params: ["29d9083d-1bee-4a91-87bf-0795fc546b22",1,0][39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["DAGING-001"][39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:16:47:1647 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 10:16:47:1647 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 created a meal[39m
2025-06-18 10:16:47:1647 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:16:47 +0000] "POST /api/meals HTTP/1.1" 201 762 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:16:48:1648 [31merror[39m: [31mValidation failed:[39m {
  "path": "/",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:16:48:1648 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:16:48 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["SAYUR-001","DAGING-001"][39m
2025-06-18 10:16:48:1648 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:16:48:1648 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:16:48 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 3154 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:17:02:172 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:17:02:172 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:17:02:172 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mFound 4 meals[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mTotal calories consumed: 30045[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:17:02:172 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:17:02:172 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:17:02:172 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:17:02:172 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:17:02 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:17:18:1718 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 10:17:18:1718 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 10:17:19:1719 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 10:18:06:186 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 10:18:06:186 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 10:18:06:186 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 10:19:27:1927 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 10:19:27:1927 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 10:19:27:1927 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 10:19:30:1930 [32minfo[39m: [32mPrisma Info: Starting a mysql pool with 17 connections.[39m
2025-06-18 10:19:30:1930 [32minfo[39m: [32mDatabase connected successfully[39m
2025-06-18 10:19:30:1930 [32minfo[39m: [32mServer running on port 3000 in production mode[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:06:216 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:21:06:216 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:21:06:216 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:21:06:216 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:21:06:216 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:21:06:216 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 retrieved profile[39m
2025-06-18 10:21:06:216 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:06 +0000] "GET /api/users/profile HTTP/1.1" 200 330 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFound 4 meals[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mTotal calories consumed: 30045[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:21:06:216 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:06:216 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:21:06:216 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:21:06:216 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:06 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mConverting page=0 to page=1 for backward compatibility[39m
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:21:24:2124 [31merror[39m: [31mValidation failed:[39m {
  "path": "/",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:21:24:2124 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:24 +0000] "GET /api/meals?page=0&limit=10&date=18-06-2025 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["SAYUR-001","DAGING-001"][39m
2025-06-18 10:21:24:2124 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:21:24:2124 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:24 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 3154 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:27:2127 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:21:27:2127 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:21:27:2127 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mFound 4 meals[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mTotal calories consumed: 30045[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:21:27:2127 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:27:2127 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:21:27:2127 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:21:27:2127 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:27 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mConverting page=0 to page=1 for backward compatibility[39m
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:21:31:2131 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:21:31:2131 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:31 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt`, COALESCE(`aggr_selection_0_Food`.`_aggr_count_foods`, 0) AS `_aggr_count_foods` FROM `db_gohealth`.`FoodCategory` LEFT JOIN (SELECT `db_gohealth`.`Food`.`categoryId`, COUNT(*) AS `_aggr_count_foods` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? GROUP BY `db_gohealth`.`Food`.`categoryId`) AS `aggr_selection_0_Food` ON (`db_gohealth`.`FoodCategory`.`id` = `aggr_selection_0_Food`.`categoryId`) WHERE 1=1 ORDER BY `db_gohealth`.`FoodCategory`.`name` ASC - Params: [true][39m
2025-06-18 10:21:31:2131 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:31 +0000] "GET /api/meals/foods/categories HTTP/1.1" 200 1453 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mConverting page=0 to page=1 for backward compatibility[39m
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/favorites",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:21:31:2131 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:21:31:2131 [31merror[39m: [31mValidation failed:[39m {
  "path": "/favorites",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:21:31:2131 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:31 +0000] "GET /api/meals/favorites?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:21:34:2134 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:21:34:2134 [34mdebug[39m: [34mConverting page=0 to page=1 for backward compatibility[39m
2025-06-18 10:21:34:2134 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:21:34:2134 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:21:34:2134 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:21:34:2134 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:21:34:2134 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:21:34 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:23:01:231 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:23:01:231 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:23:01:231 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mFound 4 meals[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mTotal calories consumed: 30045[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:23:01:231 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:23:01:231 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:23:01:231 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:23:01:231 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:23:01 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt`, COALESCE(`aggr_selection_0_Food`.`_aggr_count_foods`, 0) AS `_aggr_count_foods` FROM `db_gohealth`.`FoodCategory` LEFT JOIN (SELECT `db_gohealth`.`Food`.`categoryId`, COUNT(*) AS `_aggr_count_foods` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? GROUP BY `db_gohealth`.`Food`.`categoryId`) AS `aggr_selection_0_Food` ON (`db_gohealth`.`FoodCategory`.`id` = `aggr_selection_0_Food`.`categoryId`) WHERE 1=1 ORDER BY `db_gohealth`.`FoodCategory`.`name` ASC - Params: [true][39m
2025-06-18 10:23:05:235 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:23:05 +0000] "GET /api/meals/foods/categories HTTP/1.1" 200 1453 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/favorites",
  "query": {
    "page": "1",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:23:05:235 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:23:05:235 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:23:05:235 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 20
  }
}
2025-06-18 10:23:05:235 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mConverting page=0 to page=1 for backward compatibility[39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:23:05:235 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:23:05:235 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:23:05:235 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:23:05:235 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:23:05 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id`, `db_gohealth`.`FavoriteFood`.`userId`, `db_gohealth`.`FavoriteFood`.`foodId`, `db_gohealth`.`FavoriteFood`.`createdAt`, `db_gohealth`.`FavoriteFood`.`updatedAt` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`userId` = ? ORDER BY `db_gohealth`.`FavoriteFood`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",20,0][39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?,?,?) - Params: ["IKAN-007","IKAN-006","BUAH-001","SAYUR-001"][39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?) - Params: ["209a9945-5e76-4c04-bf68-baa0162c331a","964331b7-5586-4e83-be77-d5b0722f6d9e","714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 10:23:05:235 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`FavoriteFood`.`id` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`userId` = ?) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65"][39m
2025-06-18 10:23:05:235 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:23:05 +0000] "GET /api/meals/favorites?page=1&limit=20 HTTP/1.1" 200 2439 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:23:08:238 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:23:08:238 [34mdebug[39m: [34mConverting page=0 to page=1 for backward compatibility[39m
2025-06-18 10:23:08:238 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:23:08:238 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:23:08:238 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:23:08:238 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:23:08:238 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:23:08 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:23:10:2310 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:23:10:2310 [34mdebug[39m: [34mConverting page=0 to page=1 for backward compatibility[39m
2025-06-18 10:23:10:2310 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:23:10:2310 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:23:10:2310 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "0",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:23:10:2310 [31merror[39m: [31mValidation failed:[39m {
  "path": "/foods",
  "method": "GET",
  "errors": {
    "query.page": [
      "\"query.page\" must be greater than or equal to 1"
    ]
  },
  "details": [
    {
      "message": "\"query.page\" must be greater than or equal to 1",
      "path": [
        "query",
        "page"
      ],
      "type": "number.min",
      "context": {
        "limit": 1,
        "value": 0,
        "label": "query.page",
        "key": "page"
      }
    }
  ]
}
2025-06-18 10:23:10:2310 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:23:10 +0000] "GET /api/meals/foods?page=0&limit=20 HTTP/1.1" 422 134 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:11:2511 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:25:11:2511 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:25:11:2511 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mFound 4 meals[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mTotal calories consumed: 30045[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:25:11:2511 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:11:2511 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:25:11:2511 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:25:11:2511 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:11 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:32:2532 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:25:32:2532 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:32:2532 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt`, COALESCE(`aggr_selection_0_Food`.`_aggr_count_foods`, 0) AS `_aggr_count_foods` FROM `db_gohealth`.`FoodCategory` LEFT JOIN (SELECT `db_gohealth`.`Food`.`categoryId`, COUNT(*) AS `_aggr_count_foods` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? GROUP BY `db_gohealth`.`Food`.`categoryId`) AS `aggr_selection_0_Food` ON (`db_gohealth`.`FoodCategory`.`id` = `aggr_selection_0_Food`.`categoryId`) WHERE 1=1 ORDER BY `db_gohealth`.`FoodCategory`.`name` ASC - Params: [true][39m
2025-06-18 10:25:32:2532 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:32 +0000] "GET /api/meals/foods/categories HTTP/1.1" 200 1453 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/foods",
  "query": {
    "page": "1",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 20
  }
}
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/favorites",
  "query": {
    "page": "1",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "20"
  },
  "params": {}
}
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 20
  }
}
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ? ORDER BY `db_gohealth`.`Food`.`name` ASC LIMIT ? OFFSET ? - Params: [true,20,0][39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","209a9945-5e76-4c04-bf68-baa0162c331a","fead93d8-15fd-45df-bbef-50e7113ed91b","74586580-b2d6-4043-a1f5-4184150061a4"][39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FavoriteFood`.`id`, `db_gohealth`.`FavoriteFood`.`userId`, `db_gohealth`.`FavoriteFood`.`foodId`, `db_gohealth`.`FavoriteFood`.`createdAt`, `db_gohealth`.`FavoriteFood`.`updatedAt` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`userId` = ? ORDER BY `db_gohealth`.`FavoriteFood`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",20,0][39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?,?,?) - Params: ["IKAN-007","IKAN-006","BUAH-001","SAYUR-001"][39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?,?) - Params: ["209a9945-5e76-4c04-bf68-baa0162c331a","964331b7-5586-4e83-be77-d5b0722f6d9e","714df42b-7065-4b29-bc9f-50bf4ab1e91e"][39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`Food`.`id` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`isActive` = ?) AS `sub` - Params: [true][39m
2025-06-18 10:25:33:2533 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`FavoriteFood`.`id` FROM `db_gohealth`.`FavoriteFood` WHERE `db_gohealth`.`FavoriteFood`.`userId` = ?) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65"][39m
2025-06-18 10:25:33:2533 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:33 +0000] "GET /api/meals/foods?page=1&limit=20 HTTP/1.1" 200 8051 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:33:2533 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:33 +0000] "GET /api/meals/favorites?page=1&limit=20 HTTP/1.1" 200 2439 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025",10,0][39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["DAGING-001","SAYUR-001"][39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:39:2539 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:39 +0000] "GET /api/meals?page=1&limit=10&date=18-06-2025 HTTP/1.1" 200 2950 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["SAYUR-001","DAGING-001"][39m
2025-06-18 10:25:39:2539 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:25:39:2539 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:39 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 3154 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:49:2549 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:25:49:2549 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:25:49:2549 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mFound 4 meals[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mTotal calories consumed: 30045[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:25:49:2549 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:49:2549 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:25:49:2549 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:25:49:2549 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:49 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025",10,0][39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["DAGING-001","SAYUR-001"][39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["SAYUR-001","DAGING-001"][39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:25:54:2554 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:54 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 3154 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:25:54:2554 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:25:54:2554 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:25:54 +0000] "GET /api/meals?page=1&limit=10&date=18-06-2025 HTTP/1.1" 200 2950 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:06:266 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:26:06:266 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:06:266 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["29d9083d-1bee-4a91-87bf-0795fc546b22","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:06:266 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 10:26:06:266 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["29d9083d-1bee-4a91-87bf-0795fc546b22",1,0][39m
2025-06-18 10:26:06:266 [34mdebug[39m: [34mQuery: DELETE FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) - Params: ["29d9083d-1bee-4a91-87bf-0795fc546b22"][39m
2025-06-18 10:26:06:266 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 10:26:06:266 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:06 +0000] "DELETE /api/meals/29d9083d-1bee-4a91-87bf-0795fc546b22 HTTP/1.1" 200 66 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:07:267 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:07:267 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:07:267 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:26:07:267 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:07:267 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:26:07:267 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025",10,0][39m
2025-06-18 10:26:07:267 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["SAYUR-001","DAGING-001"][39m
2025-06-18 10:26:07:267 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:26:07:267 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:07:267 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:07 +0000] "GET /api/meals?page=1&limit=10&date=18-06-2025 HTTP/1.1" 200 2249 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:08:268 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:08:268 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:08:268 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:26:08:268 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:08:268 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:26:08:268 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:08:268 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["SAYUR-001","DAGING-001"][39m
2025-06-18 10:26:08:268 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:26:08:268 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:08 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 2429 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:12:2612 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:26:12:2612 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:26:12:2612 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mFound 3 meals[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mTotal calories consumed: 15045[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:26:12:2612 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:12:2612 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:12:2612 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:26:12:2612 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:12 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:19:2619 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range month and month null[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:26:19:2619 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:26:19:2619 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","01-06-2025","07-06-2025"][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","08-06-2025","14-06-2025"][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025","21-06-2025"][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","22-06-2025","28-06-2025"][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` >= ? AND `db_gohealth`.`UserMeal`.`date` <= ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","29-06-2025","29-06-2025"][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mFound 3 meals[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mTotal calories consumed: 15045[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:26:19:2619 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:19:2619 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:19:2619 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: month, month: null[39m
2025-06-18 10:26:19:2619 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:19 +0000] "GET /api/users/dashboard?range=month HTTP/1.1" 200 1411 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:30:2630 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:26:30:2630 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:26:30:2630 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mFound 3 meals[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mTotal calories consumed: 15045[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:26:30:2630 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:30:2630 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:30:2630 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:26:30:2630 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:30 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1393 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["SAYUR-001","DAGING-001"][39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:26:34:2634 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:34 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 2429 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025",10,0][39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?,?) - Params: ["SAYUR-001","DAGING-001"][39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?,?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e","fead93d8-15fd-45df-bbef-50e7113ed91b"][39m
2025-06-18 10:26:34:2634 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:34:2634 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:34 +0000] "GET /api/meals?page=1&limit=10&date=18-06-2025 HTTP/1.1" 200 2249 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:45:2645 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:26:45:2645 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:45:2645 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND `db_gohealth`.`UserMeal`.`userId` = ?) LIMIT ? OFFSET ? - Params: ["9cac3d6c-c464-4073-9983-70e59141416b","05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:45:2645 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 10:26:45:2645 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["9cac3d6c-c464-4073-9983-70e59141416b",1,0][39m
2025-06-18 10:26:45:2645 [34mdebug[39m: [34mQuery: DELETE FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`id` = ? AND 1=1) - Params: ["9cac3d6c-c464-4073-9983-70e59141416b"][39m
2025-06-18 10:26:45:2645 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 10:26:45:2645 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:45 +0000] "DELETE /api/meals/9cac3d6c-c464-4073-9983-70e59141416b HTTP/1.1" 200 66 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/",
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "page": {
        "type": "number",
        "flags": {
          "default": 1
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          }
        ]
      },
      "limit": {
        "type": "number",
        "flags": {
          "default": 10
        },
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "search": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 100
            }
          }
        ]
      },
      "category": {
        "type": "string",
        "rules": [
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "date": {
        "type": "date"
      },
      "mealType": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "SNACK"
        ]
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "page": "1",
    "limit": "10",
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "page": 1,
    "limit": 10,
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) ORDER BY `db_gohealth`.`UserMeal`.`createdAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025",10,0][39m
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 10:26:46:2646 [34mdebug[39m: [34mQuery: SELECT COUNT(*) AS `_count._all` FROM (SELECT `db_gohealth`.`UserMeal`.`id` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?)) AS `sub` - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:46:2646 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:46 +0000] "GET /api/meals?page=1&limit=10&date=18-06-2025 HTTP/1.1" 200 1548 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:47:2647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:47:2647 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "GET",
  "path": "/summary",
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:47:2647 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "date": {
        "type": "date",
        "flags": {}
      }
    }
  },
  "schemaKeys": [
    "query"
  ]
}
2025-06-18 10:26:47:2647 [34mdebug[39m: [34mData to validate:[39m {
  "query": {
    "date": "18-06-2025"
  },
  "params": {}
}
2025-06-18 10:26:47:2647 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "query": {
    "date": "2025-06-17T17:00:00.000Z"
  }
}
2025-06-18 10:26:47:2647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:47:2647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`Food`.`id`, `db_gohealth`.`Food`.`name`, `db_gohealth`.`Food`.`categoryId`, `db_gohealth`.`Food`.`protein`, `db_gohealth`.`Food`.`fat`, `db_gohealth`.`Food`.`carbohydrate`, `db_gohealth`.`Food`.`calory`, `db_gohealth`.`Food`.`isActive`, `db_gohealth`.`Food`.`createdAt`, `db_gohealth`.`Food`.`updatedAt` FROM `db_gohealth`.`Food` WHERE `db_gohealth`.`Food`.`id` IN (?) - Params: ["SAYUR-001"][39m
2025-06-18 10:26:47:2647 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`FoodCategory`.`id`, `db_gohealth`.`FoodCategory`.`name`, `db_gohealth`.`FoodCategory`.`slug`, `db_gohealth`.`FoodCategory`.`description`, `db_gohealth`.`FoodCategory`.`createdAt`, `db_gohealth`.`FoodCategory`.`updatedAt` FROM `db_gohealth`.`FoodCategory` WHERE `db_gohealth`.`FoodCategory`.`id` IN (?) - Params: ["964331b7-5586-4e83-be77-d5b0722f6d9e"][39m
2025-06-18 10:26:47:2647 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:47 +0000] "GET /api/meals/summary?date=18-06-2025 HTTP/1.1" 200 1711 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:55:2655 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:26:55:2655 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:26:55:2655 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:26:55:2655 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mFound 2 meals[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mTotal calories consumed: 45[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:26:56:2656 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:26:56:2656 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:26:56:2656 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:26:56:2656 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:26:56 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1387 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mQuery: SELECT 1 - Params: [][39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mValidation Middleware - Incoming request:[39m {
  "method": "PUT",
  "path": "/profile",
  "body": {
    "name": "howlil",
    "age": 25,
    "gender": "MALE",
    "height": 170,
    "weight": 55,
    "activityLevel": "VERY_ACTIVE"
  },
  "query": {},
  "params": {}
}
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mSchema structure:[39m {
  "hasStructure": {
    "type": "object",
    "keys": {
      "name": {
        "type": "string",
        "rules": [
          {
            "name": "trim",
            "args": {
              "enabled": true
            }
          },
          {
            "name": "min",
            "args": {
              "limit": 2
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 50
            }
          }
        ]
      },
      "age": {
        "type": "number",
        "rules": [
          {
            "name": "integer"
          },
          {
            "name": "min",
            "args": {
              "limit": 1
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 120
            }
          }
        ]
      },
      "gender": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "MALE",
          "FEMALE"
        ]
      },
      "height": {
        "type": "number",
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 50
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 300
            }
          }
        ]
      },
      "weight": {
        "type": "number",
        "rules": [
          {
            "name": "min",
            "args": {
              "limit": 20
            }
          },
          {
            "name": "max",
            "args": {
              "limit": 500
            }
          }
        ]
      },
      "activityLevel": {
        "type": "string",
        "flags": {
          "only": true
        },
        "allow": [
          "SEDENTARY",
          "LIGHTLY",
          "ACTIVE",
          "MODERATELY_ACTIVE",
          "VERY_ACTIVE",
          "EXTRA_ACTIVE"
        ]
      }
    }
  },
  "schemaKeys": [
    "body"
  ]
}
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mData to validate:[39m {
  "body": {
    "name": "howlil",
    "age": 25,
    "gender": "MALE",
    "height": 170,
    "weight": 55,
    "activityLevel": "VERY_ACTIVE"
  },
  "query": {},
  "params": {}
}
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mValidation passed, validated values:[39m {
  "body": {
    "name": "howlil",
    "age": 25,
    "gender": "MALE",
    "height": 170,
    "weight": 55,
    "activityLevel": "VERY_ACTIVE"
  }
}
2025-06-18 10:27:40:2740 [32minfo[39m: [32mUpdating profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mUpdating user record with data:[39m {
  "name": "howlil",
  "age": 25,
  "gender": "MALE",
  "height": 170,
  "weight": 55,
  "activityLevel": "VERY_ACTIVE"
}
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mQuery: BEGIN - Params: [][39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65"][39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mQuery: UPDATE `db_gohealth`.`User` SET `name` = ?, `age` = ?, `gender` = ?, `height` = ?, `weight` = ?, `activityLevel` = ?, `updatedAt` = ? WHERE (`db_gohealth`.`User`.`id` IN (?) AND (`db_gohealth`.`User`.`id` = ? AND 1=1)) - Params: ["howlil",25,"MALE",170,55,"VERY_ACTIVE","2025-06-18 03:27:40.481 UTC","05110d89-00ca-4d66-8630-0632463e2c65","05110d89-00ca-4d66-8630-0632463e2c65"][39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`googleId`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`password`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE `db_gohealth`.`User`.`id` = ? LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mQuery: COMMIT - Params: [][39m
2025-06-18 10:27:40:2740 [32minfo[39m: [32mProfile updated successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:27:40:2740 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:27:40:2740 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:27:40:2740 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:27:40:2740 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 updated profile[39m
2025-06-18 10:27:40:2740 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:27:40 +0000] "PUT /api/users/profile HTTP/1.1" 200 326 "-" "Dart/3.7 (dart:io)"[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:27:45:2745 [32minfo[39m: [32mFetching dashboard data for user 05110d89-00ca-4d66-8630-0632463e2c65 on date 18-06-2025 with range week and month null[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mGetting user profile...[39m
2025-06-18 10:27:45:2745 [32minfo[39m: [32mFetching profile for user ID: 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mFinding user in database...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`User`.`id`, `db_gohealth`.`User`.`email`, `db_gohealth`.`User`.`name`, `db_gohealth`.`User`.`age`, `db_gohealth`.`User`.`gender`, `db_gohealth`.`User`.`height`, `db_gohealth`.`User`.`weight`, `db_gohealth`.`User`.`activityLevel`, `db_gohealth`.`User`.`profileImage`, `db_gohealth`.`User`.`createdAt`, `db_gohealth`.`User`.`updatedAt` FROM `db_gohealth`.`User` WHERE (`db_gohealth`.`User`.`id` = ? AND 1=1) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mCalculating BMR and TDEE...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mCalculated BMR: 1493, TDEE: 2575[39m
2025-06-18 10:27:45:2745 [32minfo[39m: [32mProfile retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","15-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","16-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","17-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","19-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","20-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","21-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mFetching today's meals...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserMeal`.`id`, `db_gohealth`.`UserMeal`.`userId`, `db_gohealth`.`UserMeal`.`foodId`, `db_gohealth`.`UserMeal`.`mealType`, `db_gohealth`.`UserMeal`.`date`, `db_gohealth`.`UserMeal`.`quantity`, `db_gohealth`.`UserMeal`.`unit`, `db_gohealth`.`UserMeal`.`totalCalories`, `db_gohealth`.`UserMeal`.`totalProtein`, `db_gohealth`.`UserMeal`.`totalFat`, `db_gohealth`.`UserMeal`.`totalCarbs`, `db_gohealth`.`UserMeal`.`createdAt`, `db_gohealth`.`UserMeal`.`updatedAt` FROM `db_gohealth`.`UserMeal` WHERE (`db_gohealth`.`UserMeal`.`userId` = ? AND `db_gohealth`.`UserMeal`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mFound 2 meals[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mFetching today's activities...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`UserActivity`.`userId`, `db_gohealth`.`UserActivity`.`activityTypeId`, `db_gohealth`.`UserActivity`.`date`, `db_gohealth`.`UserActivity`.`duration`, `db_gohealth`.`UserActivity`.`caloriesBurned`, `db_gohealth`.`UserActivity`.`intensity`, `db_gohealth`.`UserActivity`.`notes`, `db_gohealth`.`UserActivity`.`startTime`, `db_gohealth`.`UserActivity`.`endTime`, `db_gohealth`.`UserActivity`.`createdAt`, `db_gohealth`.`UserActivity`.`updatedAt` FROM `db_gohealth`.`UserActivity` WHERE (`db_gohealth`.`UserActivity`.`userId` = ? AND `db_gohealth`.`UserActivity`.`date` = ?) - Params: ["05110d89-00ca-4d66-8630-0632463e2c65","18-06-2025"][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mFound 0 activities[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mCalculating calories consumed...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mTotal calories consumed: 45[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mCalculating calories burned from activities...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mTotal calories burned: 0[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mFetching nutrition targets...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`DailyNutritionTarget`.`id`, `db_gohealth`.`DailyNutritionTarget`.`userId`, `db_gohealth`.`DailyNutritionTarget`.`calories`, `db_gohealth`.`DailyNutritionTarget`.`protein`, `db_gohealth`.`DailyNutritionTarget`.`carbohydrates`, `db_gohealth`.`DailyNutritionTarget`.`fat`, `db_gohealth`.`DailyNutritionTarget`.`fiber`, `db_gohealth`.`DailyNutritionTarget`.`effectiveDate`, `db_gohealth`.`DailyNutritionTarget`.`isActive`, `db_gohealth`.`DailyNutritionTarget`.`createdAt`, `db_gohealth`.`DailyNutritionTarget`.`updatedAt` FROM `db_gohealth`.`DailyNutritionTarget` WHERE (`db_gohealth`.`DailyNutritionTarget`.`userId` = ? AND `db_gohealth`.`DailyNutritionTarget`.`isActive` = ? AND `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` <= ?) ORDER BY `db_gohealth`.`DailyNutritionTarget`.`effectiveDate` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,"18-06-2025",1,0][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mFetching active weight goal...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`WeightGoal`.`id`, `db_gohealth`.`WeightGoal`.`userId`, `db_gohealth`.`WeightGoal`.`startWeight`, `db_gohealth`.`WeightGoal`.`targetWeight`, `db_gohealth`.`WeightGoal`.`startDate`, `db_gohealth`.`WeightGoal`.`targetDate`, `db_gohealth`.`WeightGoal`.`isActive`, `db_gohealth`.`WeightGoal`.`createdAt`, `db_gohealth`.`WeightGoal`.`updatedAt` FROM `db_gohealth`.`WeightGoal` WHERE (`db_gohealth`.`WeightGoal`.`userId` = ? AND `db_gohealth`.`WeightGoal`.`isActive` = ?) LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",true,1,0][39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mFetching latest BMI record...[39m
2025-06-18 10:27:45:2745 [34mdebug[39m: [34mQuery: SELECT `db_gohealth`.`BMIRecord`.`id`, `db_gohealth`.`BMIRecord`.`userId`, `db_gohealth`.`BMIRecord`.`height`, `db_gohealth`.`BMIRecord`.`weight`, `db_gohealth`.`BMIRecord`.`bmi`, `db_gohealth`.`BMIRecord`.`status`, `db_gohealth`.`BMIRecord`.`recordedAt`, `db_gohealth`.`BMIRecord`.`createdAt`, `db_gohealth`.`BMIRecord`.`updatedAt`, `db_gohealth`.`BMIRecord`.`nutritionSummary` FROM `db_gohealth`.`BMIRecord` WHERE `db_gohealth`.`BMIRecord`.`userId` = ? ORDER BY `db_gohealth`.`BMIRecord`.`recordedAt` DESC LIMIT ? OFFSET ? - Params: ["05110d89-00ca-4d66-8630-0632463e2c65",1,0][39m
2025-06-18 10:27:45:2745 [32minfo[39m: [32mDashboard data retrieved successfully for user 05110d89-00ca-4d66-8630-0632463e2c65[39m
2025-06-18 10:27:45:2745 [32minfo[39m: [32mUser 05110d89-00ca-4d66-8630-0632463e2c65 accessed dashboard for date: 18-06-2025, range: week, month: null[39m
2025-06-18 10:27:45:2745 [35mhttp[39m: [35m::1 - - [18/Jun/2025:03:27:45 +0000] "GET /api/users/dashboard?range=week HTTP/1.1" 200 1385 "-" "Dart/3.7 (dart:io)"[39m
